{"version":3,"sources":["file:///Users/zzx/Desktop/naga123/client/assets/script/login/login_account.ts"],"names":["_decorator","Component","EditBox","ccclass","property","login_account","start","account_data","globalThis","userMgr","getAccount","password","nickname_editbox","string","nickname","password_editbox","update","deltaTime","onBtnClick","event","customEventData","eventTargets","emit","data","loginMessage","SendMssage","console","log","node","active"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,O,OAAAA,O;;;;;;;;;OAChC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;+BAGjBK,a,WADZF,OAAO,CAAC,eAAD,C,UAEHC,QAAQ,CAACF,OAAD,C,UAGRE,QAAQ,CAACF,OAAD,C,2BALb,MACaG,aADb,SACmCJ,SADnC,CAC6C;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAOzCK,QAAAA,KAAK,GAAG;AACJ,cAAIC,YAAY,GAAGC,UAAU,CAACC,OAAX,CAAmBC,UAAnB,EAAnB;;AACA,cAAIH,YAAY,IAAI,IAAhB,IAAwBA,YAAY,CAACI,QAAb,IAAyB,IAAjD,IAAyDJ,YAAY,CAACI,QAAb,IAAyB,EAAtF,EAA0F;AACtF,iBAAKC,gBAAL,CAAsBC,MAAtB,GAA+BN,YAAY,CAACO,QAA5C;AACA,iBAAKC,gBAAL,CAAsBF,MAAtB,GAA+BN,YAAY,CAACI,QAA5C;AACH,WAHD,MAIK;AACD,iBAAKC,gBAAL,CAAsBC,MAAtB,GAA+B,EAA/B;AACA,iBAAKE,gBAAL,CAAsBF,MAAtB,GAA+B,EAA/B;AACH;AACJ;;AAEDG,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAEDC,QAAAA,UAAU,CAACC,KAAD,EAAaC,eAAb,EAAmC;AACzC,kBAAQA,eAAR;AACI,iBAAK,QAAL;AACI;AACI,oBAAIN,QAAQ,GAAG,KAAKF,gBAAL,CAAsBC,MAArC;AACA,oBAAIF,QAAQ,GAAG,KAAKI,gBAAL,CAAsBF,MAArC;;AACA,oBAAIC,QAAQ,IAAI,EAAhB,EAAoB;AAChBN,kBAAAA,UAAU,CAACa,YAAX,CAAwBC,IAAxB,CAA6B,eAA7B,EAA8C,UAA9C;AACA;AACH;;AACD,oBAAIX,QAAQ,IAAI,EAAhB,EAAoB;AAChBH,kBAAAA,UAAU,CAACa,YAAX,CAAwBC,IAAxB,CAA6B,eAA7B,EAA8C,SAA9C;AACA;AACH;;AACD,oBAAIC,IAAI,GAAG;AACPT,kBAAAA,QAAQ,EAAEA,QADH;AAEPH,kBAAAA,QAAQ,EAAEA;AAFH,iBAAX;AAIAH,gBAAAA,UAAU,CAACgB,YAAX,CAAwBC,UAAxB,CAAmC,cAAnC,EAAmDF,IAAnD;AACAG,gBAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCJ,IAAhC;AACA;AACH;;AACL,iBAAK,WAAL;AACI;AACI,qBAAKK,IAAL,CAAUC,MAAV,GAAmB,KAAnB;AACA;AACH;;AACL;AACI;AA3BR;AA6BH;;AArDwC,O","sourcesContent":["import { _decorator, Component, Node, EditBox, input, EventTouch, Input } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('login_account')\nexport class login_account extends Component {\n    @property(EditBox)\n    nickname_editbox;\n\n    @property(EditBox)\n    password_editbox;\n\n    start() {\n        let account_data = globalThis.userMgr.getAccount();\n        if (account_data != null && account_data.password != null && account_data.password != '') {\n            this.nickname_editbox.string = account_data.nickname;\n            this.password_editbox.string = account_data.password;\n        }\n        else {\n            this.nickname_editbox.string = '';\n            this.password_editbox.string = '';\n        }\n    }\n\n    update(deltaTime: number) {\n\n    }\n\n    onBtnClick(event: any, customEventData: any) {\n        switch (customEventData) {\n            case 'btn_ok':\n                {\n                    let nickname = this.nickname_editbox.string;\n                    let password = this.password_editbox.string;\n                    if (nickname == '') {\n                        globalThis.eventTargets.emit('login_popTips', '用户名不能为空！');\n                        return;\n                    }\n                    if (password == '') {\n                        globalThis.eventTargets.emit('login_popTips', '密码不能为空！');\n                        return;\n                    }\n                    let data = {\n                        nickname: nickname,\n                        password: password,\n                    };\n                    globalThis.loginMessage.SendMssage('accountLogin', data);\n                    console.log('发送账号登录请求login = ', data);\n                    break;\n                }\n            case 'btn_close':\n                {\n                    this.node.active = false;\n                    break;\n                }\n            default:\n                break;\n        }\n    }\n}\n\n"]}
{"version":3,"sources":["file:///Users/zzx/Desktop/naga123/client/assets/script/sgj/sgj_btn.ts"],"names":["_decorator","Component","Node","Sprite","sgj_sprite","ccclass","property","sgj_btn","tooltip","readonly","type","EventHandler","bet_score","_touchCounter","_isTouching","start","update","deltaTime","onEnable","node","on","EventType","TOUCH_START","_onTouchStart","TOUCH_END","_onTouchEnd","TOUCH_CANCEL","_onTouchCancel","onDisable","off","event","publishOneTouch","isLongPress","schedule","_touchCounterCallback","touchInterval","unschedule","longTouchEvents","forEach","eventHandler","emit","handleToucheLogic","touchCounter","customEventData","console","log","setBetScore","bet_score_spr","betn_node","globalThis","userMgr","score","str","toString","len","length","i","st","Number","spriteFrame","getInstance","up_number_spf","active","setUserScore","addTops"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAgCC,MAAAA,M,OAAAA,M;;AACvDC,MAAAA,U,iBAAAA,U;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;yBAGjBO,O,WADZF,OAAO,CAAC,SAAD,C,UAEHC,QAAQ,CAAC;AACNE,QAAAA,OAAO,EAAE;AADH,OAAD,C,UAKRF,QAAQ,CAAC;AACNE,QAAAA,OAAO,EAAE;AADH,OAAD,C,UAMRF,QAAQ,CAAC;AACNG,QAAAA,QAAQ,EAAE,IADJ;AAEND,QAAAA,OAAO,EAAE;AAFH,OAAD,C,UAMRF,QAAQ,CAAC;AACNI,QAAAA,IAAI,EAAE,CAACT,SAAS,CAACU,YAAX,CADA;AAENH,QAAAA,OAAO,EAAE;AAFH,OAAD,C,UAORF,QAAQ,CAACH,MAAD,C,2BA1Bb,MACaI,OADb,SAC6BN,SAD7B,CACuC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eA4BnCW,SA5BmC,GA4BvB,CA5BuB;AAAA,eAiC3BC,aAjC2B,GAiCH,CAjCG;AAAA,eAsC3BC,WAtC2B,GAsCJ,KAtCI;AAAA;;AAwCnCC,QAAAA,KAAK,GAAG,CAEP;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAEDC,QAAAA,QAAQ,GAAG;AACP,eAAKC,IAAL,CAAUC,EAAV,CAAalB,IAAI,CAACmB,SAAL,CAAeC,WAA5B,EAAyC,KAAKC,aAA9C,EAA6D,IAA7D;AACA,eAAKJ,IAAL,CAAUC,EAAV,CAAalB,IAAI,CAACmB,SAAL,CAAeG,SAA5B,EAAuC,KAAKC,WAA5C,EAAyD,IAAzD;AACA,eAAKN,IAAL,CAAUC,EAAV,CAAalB,IAAI,CAACmB,SAAL,CAAeK,YAA5B,EAA0C,KAAKC,cAA/C,EAA+D,IAA/D;AACH;;AAEDC,QAAAA,SAAS,GAAG;AACR,eAAKT,IAAL,CAAUU,GAAV,CAAc3B,IAAI,CAACmB,SAAL,CAAeC,WAA7B,EAA0C,KAAKC,aAA/C,EAA8D,IAA9D;AACA,eAAKJ,IAAL,CAAUU,GAAV,CAAc3B,IAAI,CAACmB,SAAL,CAAeG,SAA7B,EAAwC,KAAKC,WAA7C,EAA0D,IAA1D;AACA,eAAKN,IAAL,CAAUU,GAAV,CAAc3B,IAAI,CAACmB,SAAL,CAAeK,YAA7B,EAA2C,KAAKC,cAAhD,EAAgE,IAAhE;AACH;;AAEOJ,QAAAA,aAAa,CAACO,KAAD,EAAoB;AAErC,eAAKhB,WAAL,GAAmB,IAAnB,CAFqC,CAGrC;;AACA,eAAKiB,eAAL,GAJqC,CAMrC;;AACA,cAAI,KAAKC,WAAL,IAAoB,IAAxB,EAA8B;AAC1B,iBAAKlB,WAAL,GAAmB,IAAnB;AACH,WAFD,MAGK;AACD,iBAAKA,WAAL,GAAmB,KAAnB;AACA;AACH,WAboC,CAcrC;;;AACA,eAAKmB,QAAL,CAAc,KAAKC,qBAAnB,EAA0C,KAAKC,aAA/C;AACH;;AAEOV,QAAAA,WAAW,CAACK,KAAD,EAAoB;AACnC,eAAKhB,WAAL,GAAmB,KAAnB;AACA,eAAKD,aAAL,GAAqB,CAArB;AACA,eAAKuB,UAAL,CAAgB,KAAKF,qBAArB;AACH;;AAEOP,QAAAA,cAAc,CAACG,KAAD,EAAoB;AACtC,eAAKhB,WAAL,GAAmB,KAAnB;AACA,eAAKD,aAAL,GAAqB,CAArB;AACA,eAAKuB,UAAL,CAAgB,KAAKF,qBAArB;AACH;;AAEOA,QAAAA,qBAAqB,GAAG;AAC5B,cAAI,KAAKpB,WAAT,EAAsB;AAClB,iBAAKiB,eAAL;AACH,WAFD,MAEO;AACH,iBAAKK,UAAL,CAAgB,KAAKF,qBAArB;AACH;AACJ;AAED;AACJ;AACA;;;AACYH,QAAAA,eAAe,GAAG;AACtB,cAAI,CAAC,KAAKjB,WAAV,EAAuB;AACnB;AACH;;AACD,eAAKD,aAAL;AACA,eAAKwB,eAAL,CAAqBC,OAArB,CAA8BC,YAAD,IAAgC;AACzDA,YAAAA,YAAY,CAACC,IAAb,CAAkB,CAAC,KAAK3B,aAAN,CAAlB;AACH,WAFD;AAGH,SA7GkC,CA+GnC;;;AACA4B,QAAAA,iBAAiB,CAACC,YAAD,EAAuBC,eAAvB,EAA8C;AAE3DC,UAAAA,OAAO,CAACC,GAAR,CAAa,8BAAb,EAA4CF,eAA5C;;AACA,kBAAQA,eAAR;AACI,iBAAK,IAAL;AACI;AACI,qBAAKG,WAAL,CAAiB,KAAKC,aAAtB;AACA;AACH;AALT;AAOH,SA1HkC,CA4HnC;;;AACAD,QAAAA,WAAW,CAACE,SAAD,EAAY;AACnBJ,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKjC,SAA/B;;AACA,cAAI,KAAKA,SAAL,GAAiB,EAAjB,IAAuBqC,UAAU,CAACC,OAAX,CAAmBC,KAAnB,GAA2B,CAAtD,EAAyD;AACrD,iBAAKvC,SAAL,IAAkB,CAAlB;AACAqC,YAAAA,UAAU,CAACC,OAAX,CAAmBC,KAAnB,IAA4B,CAA5B;AACA,gBAAIC,GAAG,GAAG,KAAKxC,SAAL,CAAeyC,QAAf,EAAV;AACA,gBAAIC,GAAG,GAAGF,GAAG,CAACG,MAAd;;AACA,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,kBAAIA,CAAC,GAAGF,GAAR,EAAa;AACT,oBAAIG,EAAE,GAAGC,MAAM,CAACN,GAAG,CAACE,GAAG,GAAGE,CAAN,GAAU,CAAX,CAAJ,CAAf;AACAR,gBAAAA,SAAS,CAACQ,CAAD,CAAT,CAAaG,WAAb,GAA2B;AAAA;AAAA,8CAAWC,WAAX,GAAyBC,aAAzB,CAAuCJ,EAAvC,CAA3B;AACAT,gBAAAA,SAAS,CAACQ,CAAD,CAAT,CAAarC,IAAb,CAAkB2C,MAAlB,GAA2B,IAA3B;AACH,eAJD,MAKK;AACDd,gBAAAA,SAAS,CAACQ,CAAD,CAAT,CAAarC,IAAb,CAAkB2C,MAAlB,GAA2B,KAA3B;AACH;AACJ;;AACDlB,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BI,UAAU,CAACC,OAAX,CAAmBC,KAA7C;AACA;AAAA;AAAA,0CAAWS,WAAX,GAAyBG,YAAzB,CAAsCd,UAAU,CAACC,OAAX,CAAmBC,KAAzD;AACH,WAjBD,MAkBK;AACD;AAAA;AAAA,0CAAWS,WAAX,GAAyBI,OAAzB,CAAiC,aAAjC;AACH;AACJ;;AApJkC,O;;;;;iBAIX,G;;;;;;;iBAKD,I;;;;;;;iBAOQ,K;;;;;;;iBAMG,E;;;;;;;iBAIR,E","sourcesContent":["import { _decorator, Component, Node, EventHandler, EventTouch, Sprite } from 'cc';\nimport { sgj_sprite } from './sgj_sprite';\nconst { ccclass, property } = _decorator;\n\n@ccclass('sgj_btn')\nexport class sgj_btn extends Component {\n    @property({\n        tooltip: \"触摸回调间隔（秒）。假如为0.1，那么1秒内会回调10次 ${longTouchEvents} 事件数组\"\n    })\n    touchInterval: number = 0.2;\n\n    @property({\n        tooltip: \"是否支持长按\"\n    })\n    isLongPress: boolean = true;\n\n\n    @property({\n        readonly: true,\n        tooltip: \"是否支持多点触控（当前还不支持）\"\n    })\n    enableMultiTouching: boolean = false;\n\n    @property({\n        type: [Component.EventHandler],\n        tooltip: \"回调事件数组，每间隔 ${toucheInterval}s 回调一次\"\n    })\n    longTouchEvents: EventHandler[] = [];\n\n    //下注1分数spr\n    @property(Sprite)\n    bet_score_spr: Sprite[] = [];\n\n    bet_score = 0;\n\n    /**\n     * 触摸计数器，用于统计本次长按的回调次数\n     */\n    private _touchCounter: number = 0;\n\n    /**\n     * 标记当前是否在触摸这个节点\n     */\n    private _isTouching: boolean = false;\n\n    start() {\n\n    }\n\n    update(deltaTime: number) {\n\n    }\n\n    onEnable() {\n        this.node.on(Node.EventType.TOUCH_START, this._onTouchStart, this);\n        this.node.on(Node.EventType.TOUCH_END, this._onTouchEnd, this);\n        this.node.on(Node.EventType.TOUCH_CANCEL, this._onTouchCancel, this);\n    }\n\n    onDisable() {\n        this.node.off(Node.EventType.TOUCH_START, this._onTouchStart, this);\n        this.node.off(Node.EventType.TOUCH_END, this._onTouchEnd, this);\n        this.node.off(Node.EventType.TOUCH_CANCEL, this._onTouchCancel, this);\n    }\n\n    private _onTouchStart(event: EventTouch) {\n\n        this._isTouching = true;\n        // 第一次触摸立即回调一次\n        this.publishOneTouch();\n\n        //不支持长按\n        if (this.isLongPress == true) {\n            this._isTouching = true;\n        }\n        else {\n            this._isTouching = false;\n            return;\n        }\n        // 然后开启计时器，计算后续的长按相当于触摸了多少次\n        this.schedule(this._touchCounterCallback, this.touchInterval);\n    }\n\n    private _onTouchEnd(event: EventTouch) {\n        this._isTouching = false;\n        this._touchCounter = 0;\n        this.unschedule(this._touchCounterCallback);\n    }\n\n    private _onTouchCancel(event: EventTouch) {\n        this._isTouching = false;\n        this._touchCounter = 0;\n        this.unschedule(this._touchCounterCallback);\n    }\n\n    private _touchCounterCallback() {\n        if (this._isTouching) {\n            this.publishOneTouch();\n        } else {\n            this.unschedule(this._touchCounterCallback);\n        }\n    }\n\n    /**\n     * 通知出去：被点击/触摸了一次，长按时，会连续多次回调这个方法\n     */\n    private publishOneTouch() {\n        if (!this._isTouching) {\n            return;\n        }\n        this._touchCounter++;\n        this.longTouchEvents.forEach((eventHandler: EventHandler) => {\n            eventHandler.emit([this._touchCounter]);\n        });\n    }\n\n    //处理逻辑事件\n    handleToucheLogic(touchCounter: number, customEventData?: any) {\n\n        console.log(`界面就不演示输出 CustomEventData了 - `, customEventData);\n        switch (customEventData) {\n            case 'b1':\n                {\n                    this.setBetScore(this.bet_score_spr);\n                    break;\n                }\n        }\n    }\n\n    //设置下注分数\n    setBetScore(betn_node) {\n        console.log('aaaaaaa = ', this.bet_score)\n        if (this.bet_score < 99 && globalThis.userMgr.score > 0) {\n            this.bet_score += 1;\n            globalThis.userMgr.score -= 1;\n            let str = this.bet_score.toString();\n            let len = str.length;\n            for (let i = 0; i < 2; i++) {\n                if (i < len) {\n                    let st = Number(str[len - i - 1]);\n                    betn_node[i].spriteFrame = sgj_sprite.getInstance().up_number_spf[st];\n                    betn_node[i].node.active = true;\n                }\n                else {\n                    betn_node[i].node.active = false;\n                }\n            }\n            console.log('bbbbbbb = ', globalThis.userMgr.score)\n            sgj_sprite.getInstance().setUserScore(globalThis.userMgr.score);\n        }\n        else {\n            sgj_sprite.getInstance().addTops('余额不足,请充值。。。');\n        }\n    }\n\n\n}"]}
{"version":3,"sources":["file:///Users/zzx/Desktop/naga123/client/assets/script/login/login.ts"],"names":["_decorator","Component","Node","EventTarget","instantiate","Prefab","resources","userMgr","globalThis","getInstance","ccclass","property","eventTargets","login","onLoad","start","onEnable","on","addTops","onDisable","off","arg1","t_tips_pre","tips_prefab","active","tips_node","addChild","tipsScript","getComponent","onShow","onBtnClick","event","customEventData","account","getAccount","loginMessage","SendMssage","console","log","load","err","prefab","newNode","node","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,W,OAAAA,W;AAA+BC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,S,OAAAA,S;;AACjFC,MAAAA,O,iBAAAA,O;;;;;;;;;AACTC,MAAAA,UAAU,CAACD,OAAX,GAAqB;AAAA;AAAA,8BAAQE,WAAR,EAArB;OAEM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBX,U;AAE9BQ,MAAAA,UAAU,CAACI,YAAX,GAA0B,IAAIT,WAAJ,EAA1B;;uBAGaU,K,WADZH,OAAO,CAAC,OAAD,C,UAEHC,QAAQ,CAACT,IAAD,C,UAGRS,QAAQ,CAACT,IAAD,C,UAGRS,QAAQ,CAACT,IAAD,C,2BARb,MACaW,KADb,SAC2BZ,SAD3B,CACqC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAUjCa,QAAAA,MAAM,GAAG,CAER;;AAEDC,QAAAA,KAAK,GAAG,CAEP;;AAEDC,QAAAA,QAAQ,GAAG;AACPR,UAAAA,UAAU,CAACI,YAAX,CAAwBK,EAAxB,CAA2B,eAA3B,EAA4C,KAAKC,OAAjD,EAA0D,IAA1D;AAEH;;AAEDC,QAAAA,SAAS,GAAG;AACRX,UAAAA,UAAU,CAACI,YAAX,CAAwBQ,GAAxB,CAA4B,eAA5B,EAA6C,KAAKF,OAAlD,EAA2D,IAA3D;AACH,SAzBgC,CA2BjC;;;AACAA,QAAAA,OAAO,CAACG,IAAD,EAAe;AAClB,cAAIC,UAAU,GAAGlB,WAAW,CAAC,KAAKmB,WAAN,CAA5B;AACAD,UAAAA,UAAU,CAACE,MAAX,GAAoB,IAApB;AACA,eAAKC,SAAL,CAAeC,QAAf,CAAwBJ,UAAxB;AACA,cAAIK,UAAU,GAAGL,UAAU,CAACM,YAAX,CAAwB,MAAxB,CAAjB;AACAD,UAAAA,UAAU,CAACE,MAAX,CAAkBR,IAAlB;AACH;;AAGDS,QAAAA,UAAU,CAACC,KAAD,EAAaC,eAAb,EAAmC;AACzC,kBAAQA,eAAR;AACI,iBAAK,YAAL;AACI;AACI,oBAAIC,OAAO,GAAGzB,UAAU,CAACD,OAAX,CAAmB2B,UAAnB,EAAd;AACA1B,gBAAAA,UAAU,CAAC2B,YAAX,CAAwBC,UAAxB,CAAmC,YAAnC,EAAiDH,OAAjD;AACAI,gBAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCL,OAAhC;AACA;AACH;;AACL,iBAAK,cAAL;AACI;AACI3B,gBAAAA,SAAS,CAACiC,IAAV,CAAe,sBAAf,EAAuClC,MAAvC,EAA+C,CAACmC,GAAD,EAAMC,MAAN,KAAiB;AAC5D,sBAAIC,OAAO,GAAGtC,WAAW,CAACqC,MAAD,CAAzB;AACA,uBAAKE,IAAL,CAAUjB,QAAV,CAAmBgB,OAAnB;AACAL,kBAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,iBAJD,EADJ,CAOI;AACH;;AACL;AACI;AAnBR;AAqBH;;AAEDM,QAAAA,MAAM,CAACC,SAAD,EAAoB,CACzB;;AA9DgC,O","sourcesContent":["import { _decorator, Component, Node, EventTarget, Button, director, instantiate, Prefab, resources } from 'cc';\nimport { userMgr } from '../utils/userMgr';\nglobalThis.userMgr = userMgr.getInstance();\n\nconst { ccclass, property } = _decorator;\n\nglobalThis.eventTargets = new EventTarget();\n\n@ccclass('login')\nexport class login extends Component {\n    @property(Node)\n    accountLoginNode: Node;\n\n    @property(Node)\n    tips_node: Node;\n\n    @property(Node)\n    tips_prefab: Node;\n\n    onLoad() {\n\n    }\n\n    start() {\n\n    }\n\n    onEnable() {\n        globalThis.eventTargets.on('login_popTips', this.addTops, this);\n\n    }\n\n    onDisable() {\n        globalThis.eventTargets.off('login_popTips', this.addTops, this);\n    }\n\n    //arg1:弹窗内容\n    addTops(arg1: string) {\n        let t_tips_pre = instantiate(this.tips_prefab);\n        t_tips_pre.active = true;\n        this.tips_node.addChild(t_tips_pre);\n        let tipsScript = t_tips_pre.getComponent(\"tips\");\n        tipsScript.onShow(arg1);\n    }\n\n\n    onBtnClick(event: any, customEventData: any) {\n        switch (customEventData) {\n            case 'guestLogin':\n                {\n                    let account = globalThis.userMgr.getAccount();\n                    globalThis.loginMessage.SendMssage('guestLogin', account);\n                    console.log('发送游客登录请求login = ', account);\n                    break;\n                }\n            case 'accountLogin':\n                {\n                    resources.load(\"prefab/login_account\", Prefab, (err, prefab) => {\n                        let newNode = instantiate(prefab);\n                        this.node.addChild(newNode);\n                        console.log('prefab加载完毕');\n                    });\n\n                    //this.accountLoginNode.active = true;\n                }\n            default:\n                break;\n        }\n    }\n\n    update(deltaTime: number) {\n    }\n\n\n}\n\n"]}
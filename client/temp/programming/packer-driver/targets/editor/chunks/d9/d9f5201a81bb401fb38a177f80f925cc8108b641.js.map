{"version":3,"sources":["file:///Users/zzx/Desktop/naga123/client/assets/script/login/loginMessage.ts"],"names":["_decorator","Component","director","ccclass","property","loginMessage","_ws","start","connectServer","globalThis","update","deltaTime","ws","WebSocket","onopen","console","log","onmessage","result","msg","JSON","parse","data","type","onMessage","userMgr","userid","nickname","score","saveAccount","password","roomid","close","loadScene","SendMssage","send","stringify"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, director } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('loginMessage')\nexport class loginMessage extends Component {\n\n    _ws: any = null;\n\n    start() {\n        this.connectServer();\n        globalThis.loginMessage = this;\n    }\n\n    update(deltaTime: number) {\n\n    }\n\n    connectServer() {\n        const ws = new WebSocket('ws://127.0.0.1:3000')\n        this._ws = ws;\n        ws.onopen = () => {\n            console.log('连接--登录服务器--成功！');\n        }\n\n        ws.onmessage = (result) => {\n            let msg = JSON.parse(result.data);\n            let type = msg.type;\n            let data = msg.data;\n            this.onMessage(type, data);\n        }\n    }\n\n    onMessage(type, data) {\n        switch (type) {\n            case 'guestLogin':\n                {\n                    if (data == 0) { console.log('游客登陆失败！'); }\n                    globalThis.userMgr.userid = data.userid;\n                    globalThis.userMgr.nickname = data.nickname;\n                    globalThis.userMgr.score = data.score;\n                    globalThis.userMgr.saveAccount(data.nickname, data.password);\n                    globalThis.userMgr.roomid = data.roomid;\n                    console.log('登陆成功--ID:' + data.userid + ' --名字:' + data.nickname + ' --分数:' + data.score);\n                    this._ws.close();\n                    director.loadScene('hallScene');\n                    break;\n                }\n            case 'accountLogin':\n                {\n                    if (data == 0) { console.log('登陆失败--用户不存在或密码错误--'); }\n                    globalThis.userMgr.userid = data.userid;\n                    globalThis.userMgr.nickname = data.nickname;\n                    globalThis.userMgr.score = data.score;\n                    globalThis.userMgr.saveAccount(data.nickname, data.password);\n                    globalThis.userMgr.roomid = data.roomid;\n                    console.log('登陆成功--ID:' + data.userid + ' --名字:' + data.nickname + ' --分数:' + data.score);\n                    this._ws.close();\n                    director.loadScene('hallScene');\n                }\n            default:\n                break;\n        }\n        // console.log('接受到服务器消息:' + type + ',数据:' + data);\n    }\n\n    SendMssage(type: any, data: any) {\n        let msg = {\n            type: type,\n            data: data,\n        }\n        this._ws.send(JSON.stringify(msg));\n    }\n}\n\n"]}
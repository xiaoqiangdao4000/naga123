{"version":3,"sources":["file:///Users/zzx/Desktop/naga123/client/assets/script/login/loginMessage.ts"],"names":["_decorator","Component","director","ccclass","property","loginMessage","_ws","start","connectServer","globalThis","update","deltaTime","ws","WebSocket","onopen","console","log","onmessage","result","msg","JSON","parse","data","type","onMessage","eventTargets","emit","userMgr","userid","nickname","score","saveAccount","password","roomid","bind_account","close","loadScene","SendMssage","send","stringify"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, director } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('loginMessage')\nexport class loginMessage extends Component {\n\n    _ws: any = null;\n\n    start() {\n        this.connectServer();\n        globalThis.loginMessage = this;\n    }\n\n    update(deltaTime: number) {\n\n    }\n\n    connectServer() {\n        const ws = new WebSocket('ws://127.0.0.1:3000')\n        this._ws = ws;\n        ws.onopen = () => {\n            console.log('连接--登录服务器--成功！');\n        }\n\n        ws.onmessage = (result) => {\n            let msg = JSON.parse(result.data);\n            let type = msg.type;\n            let data = msg.data;\n            this.onMessage(type, data);\n        }\n    }\n\n    onMessage(type, data) {\n        switch (type) {\n            case 'guestLogin':\n                {\n                    if (data == 0) {\n                        globalThis.eventTargets.emit('login_popTips', '游客登陆失败！');\n                        break;\n                    }\n                    globalThis.userMgr.userid = data.userid;\n                    globalThis.userMgr.nickname = data.nickname;\n                    globalThis.userMgr.score = data.score;\n                    globalThis.userMgr.saveAccount(data.nickname, data.password);\n                    globalThis.userMgr.roomid = data.roomid;\n                    globalThis.userMgr.bind_account = data.bind_account;\n                    console.log('游客登陆成功!服务器返回:' + data.data);\n                    this._ws.close();\n                    console.log('---开始切换场景：主动关闭登陆连接---');\n                    director.loadScene('hallScene');\n                    break;\n                }\n            case 'accountLogin':\n                {\n                    if (data == 0) {\n                        globalThis.eventTargets.emit('login_popTips', '登陆失败:用户不存在或密码错误!');\n                        break;\n                    }\n                    globalThis.userMgr.userid = data.userid;\n                    globalThis.userMgr.nickname = data.nickname;\n                    globalThis.userMgr.score = data.score;\n                    globalThis.userMgr.saveAccount(data.nickname, data.password);\n                    globalThis.userMgr.roomid = data.roomid;\n                    console.log('账号登陆成功!服务器返回:' + data);\n                    this._ws.close();\n                    console.log('---开始切换场景：主动关闭登陆连接---');\n                    director.loadScene('hallScene');\n                    break;\n                }\n            default:\n                break;\n        }\n        // console.log('接受到服务器消息:' + type + ',数据:' + data);\n    }\n\n    SendMssage(type: any, data: any) {\n        let msg = {\n            type: type,\n            data: data,\n        }\n        this._ws.send(JSON.stringify(msg));\n    }\n}\n\n"]}
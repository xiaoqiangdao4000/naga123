{"version":3,"sources":["file:///Users/zzx/Desktop/naga123/client/assets/script/sgj/sgj_normal.ts"],"names":["_decorator","Component","ccclass","property","sgj_normal","curIndex","is_start","cur_schedule","start","play","updateMask","schedule","stop","unschedule","i","globalThis","sgj_run","mask_node","active","update","deltaTime"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;;;;;;;;OACf;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U,GAE9B;;4BAEaI,U,WADZF,OAAO,CAAC,YAAD,C,gBAAR,MACaE,UADb,SACgCH,SADhC,CAC0C;AAAA;AAAA;AAAA,eAEtCI,QAFsC,GAE3B,CAF2B;AAAA,eAGtCC,QAHsC,GAG3B,KAH2B;AAAA,eAItCC,YAJsC,GAIvB,IAJuB;AAAA;;AAMtCC,QAAAA,KAAK,GAAG;AACJ,eAAKC,IAAL;AACH;;AAEDA,QAAAA,IAAI,GAAG;AACH,eAAKF,YAAL,GAAoB,KAAKG,UAAzB;AACA,eAAKC,QAAL,CAAc,KAAKD,UAAnB,EAA+B,GAA/B;AACH;;AAEDE,QAAAA,IAAI,GAAG;AACH,eAAKC,UAAL,CAAgB,KAAKN,YAArB;AACH;;AAEDG,QAAAA,UAAU,GAAG;AACT,cAAI,KAAKL,QAAL,GAAgB,CAApB,EAAuB,KAAKA,QAAL,GAAgB,CAAhB,CAAvB,KACK,KAAKA,QAAL;;AACL,eAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB,gBAAIA,CAAC,GAAG,CAAJ,IAAS,KAAKT,QAAlB,EAA4B;AACxBU,cAAAA,UAAU,CAACC,OAAX,CAAmBC,SAAnB,CAA6BH,CAA7B,EAAgCI,MAAhC,GAAyC,IAAzC;AACH,aAFD,MAGK;AACDH,cAAAA,UAAU,CAACC,OAAX,CAAmBC,SAAnB,CAA6BH,CAA7B,EAAgCI,MAAhC,GAAyC,KAAzC;AACH;AAEJ;AACJ;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAnCqC,O","sourcesContent":["import { _decorator, Component, Node, random, randomRangeInt } from 'cc';\nconst { ccclass, property } = _decorator;\n\n//随机运动\n@ccclass('sgj_normal')\nexport class sgj_normal extends Component {\n\n    curIndex = 0;\n    is_start = false;\n    cur_schedule = null;\n\n    start() {\n        this.play();\n    }\n\n    play() {\n        this.cur_schedule = this.updateMask;\n        this.schedule(this.updateMask, 0.6);\n    }\n\n    stop() {\n        this.unschedule(this.cur_schedule);\n    }\n\n    updateMask() {\n        if (this.curIndex > 6) this.curIndex = 0\n        else this.curIndex++;\n        for (let i = 0; i < 24; i++) {\n            if (i % 6 == this.curIndex) {\n                globalThis.sgj_run.mask_node[i].active = true;\n            }\n            else {\n                globalThis.sgj_run.mask_node[i].active = false;\n            }\n\n        }\n    }\n\n    update(deltaTime: number) {\n\n    }\n}\n\n"]}
{"version":3,"sources":["file:///C:/Users/zzx/Desktop/naga123/client/assets/script/login/login.ts"],"names":["_decorator","Component","Node","EventTarget","instantiate","Prefab","resources","userMgr","globalThis","getInstance","ccclass","property","eventTargets","login","onLoad","load","err","prefab","console","log","start","onEnable","on","addTops","onDisable","off","arg1","t_tips_pre","tips_prefab","tips_node","addChild","tipsScript","getComponent","onShow","onBtnClick","event","customEventData","account","getAccount","loginMessage","SendMssage","accountLoginNode","active","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,W,OAAAA,W;AAA8BC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,S,OAAAA,S;;AAChFC,MAAAA,O,iBAAAA,O;;;;;;;;;AACTC,MAAAA,UAAU,CAACD,OAAX,GAAqB;AAAA;AAAA,8BAAQE,WAAR,EAArB;OAEM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBX,U;AAE9BQ,MAAAA,UAAU,CAACI,YAAX,GAA0B,IAAIT,WAAJ,EAA1B;;uBAGaU,K,WADZH,OAAO,CAAC,OAAD,C,UAEHC,QAAQ,CAACT,IAAD,C,UAGRS,QAAQ,CAACT,IAAD,C,UAGRS,QAAQ,CAACN,MAAD,C,2BARb,MACaQ,KADb,SAC2BZ,SAD3B,CACqC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAUjCa,QAAAA,MAAM,GACN;AACG;AACCR,UAAAA,SAAS,CAACS,IAAV,CAAe,eAAf,EAAgCV,MAAhC,EAAwC,CAACW,GAAD,EAAMC,MAAN,KAAiBC,OAAO,CAACC,GAAR,CAAYH,GAAZ,CAAzD,EAFJ,CAGG;AACF;;AAEDI,QAAAA,KAAK,GAAG,CAEP;;AAEDC,QAAAA,QAAQ,GAAG;AACPb,UAAAA,UAAU,CAACI,YAAX,CAAwBU,EAAxB,CAA2B,sBAA3B,EAAmD,KAAKC,OAAxD,EAAiE,IAAjE;AACAf,UAAAA,UAAU,CAACI,YAAX,CAAwBU,EAAxB,CAA2B,sBAA3B,EAAmD,KAAKC,OAAxD,EAAiE,IAAjE;AAEH;;AAEDC,QAAAA,SAAS,GAAG;AACRhB,UAAAA,UAAU,CAACI,YAAX,CAAwBa,GAAxB,CAA4B,sBAA5B,EAAoD,KAAKF,OAAzD,EAAkE,IAAlE;AACAf,UAAAA,UAAU,CAACI,YAAX,CAAwBU,EAAxB,CAA2B,sBAA3B,EAAmD,KAAKC,OAAxD,EAAiE,IAAjE;AACH;;AAEDA,QAAAA,OAAO,CAACG,IAAD,EAAO;AACV,cAAIC,UAAU,GAAGvB,WAAW,CAAC,KAAKwB,WAAN,CAA5B;AACA,eAAKC,SAAL,CAAeC,QAAf,CAAwBH,UAAxB;AACA,cAAII,UAAU,GAAGJ,UAAU,CAACK,YAAX,CAAwB,MAAxB,CAAjB;AACAD,UAAAA,UAAU,CAACE,MAAX,CAAkBP,IAAlB;AACAR,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BO,IAA9B;AACH;;AAGDQ,QAAAA,UAAU,CAACC,KAAD,EAAaC,eAAb,EAAmC;AACzC,kBAAQA,eAAR;AACI,iBAAK,YAAL;AACI;AACI,oBAAIC,OAAO,GAAG7B,UAAU,CAACD,OAAX,CAAmB+B,UAAnB,EAAd;AACA9B,gBAAAA,UAAU,CAAC+B,YAAX,CAAwBC,UAAxB,CAAmC,YAAnC,EAAiDH,OAAjD;AACAnB,gBAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCkB,OAAhC;AACA;AACH;;AACL,iBAAK,cAAL;AACI;AACI,qBAAKI,gBAAL,CAAsBC,MAAtB,GAA+B,IAA/B;AACH;;AACL;AACI;AAbR;AAeH;;AAIDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AA/DgC,O","sourcesContent":["import { _decorator, Component, Node, EventTarget,Button, director, instantiate, Prefab, resources } from 'cc';\r\nimport { userMgr } from '../utils/userMgr';\r\nglobalThis.userMgr = userMgr.getInstance();\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\nglobalThis.eventTargets = new EventTarget();\r\n\r\n@ccclass('login')\r\nexport class login extends Component {\r\n    @property(Node)\r\n    accountLoginNode: Node;\r\n\r\n    @property(Node)\r\n    tips_node: Node;\r\n\r\n    @property(Prefab)\r\n    tips_prefab: Prefab;\r\n\r\n    onLoad()\r\n    {\r\n       // resources.load()\r\n        resources.load('assets/prefab', Prefab, (err, prefab) => console.log(err));\r\n       // resources.loadDir('assets/prefab', Prefab, (err, prefab) => console.log(err));\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    onEnable() {\r\n        globalThis.eventTargets.on('login_chick_nickname', this.addTops, this);\r\n        globalThis.eventTargets.on('login_chick_password', this.addTops, this);\r\n        \r\n    }\r\n\r\n    onDisable() {\r\n        globalThis.eventTargets.off('login_chick_nickname', this.addTops, this);\r\n        globalThis.eventTargets.on('login_chick_password', this.addTops, this);\r\n    }\r\n\r\n    addTops(arg1) {\r\n        let t_tips_pre = instantiate(this.tips_prefab);\r\n        this.tips_node.addChild(t_tips_pre);\r\n        let tipsScript = t_tips_pre.getComponent(\"tips\");\r\n        tipsScript.onShow(arg1);\r\n        console.log('Hello World = ', arg1);\r\n    }\r\n\r\n\r\n    onBtnClick(event: any, customEventData: any) {\r\n        switch (customEventData) {\r\n            case 'guestLogin':\r\n                {\r\n                    let account = globalThis.userMgr.getAccount();\r\n                    globalThis.loginMessage.SendMssage('guestLogin', account);\r\n                    console.log('发送游客登录请求login = ', account);\r\n                    break;\r\n                }\r\n            case 'accountLogin':\r\n                {\r\n                    this.accountLoginNode.active = true;\r\n                }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n}\r\n\r\n"]}
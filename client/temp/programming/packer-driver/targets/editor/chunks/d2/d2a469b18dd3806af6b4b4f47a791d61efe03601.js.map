{"version":3,"sources":["cce:/internal/x/prerequisite-imports"],"names":["requests","request","_err"],"mappings":";;;;;;AACA;AAEA,YAAM,CAAC,YAAY;AACf,cAAMA,QAAQ,GAAG,CAAC,uCAAD,EAA8F,uCAA9F,EAAwL,uCAAxL,EAAgR,uCAAhR,EAAqX,uCAArX,EAA+c,uCAA/c,EAAijB,uCAAjjB,EAA4oB,uCAA5oB,EAAsuB,uCAAtuB,EAAm0B,uCAAn0B,EAA65B,wCAA75B,EAAw/B,wCAAx/B,EAAilC,wCAAjlC,EAA6qC,wCAA7qC,CAAjB;;AACA,aAAK,MAAMC,OAAX,IAAsBD,QAAtB,EAAgC;AAC5B,cAAI;AACA,kBAAMC,OAAO,EAAb;AACH,WAFD,CAEE,OAAOC,IAAP,EAAa,CACX;AACH;AACJ;AACJ,OATK,GAAN","sourcesContent":["\n// Auto generated represents the prerequisite imports of project modules.\n\nawait (async () => {\n    const requests = [() => import(\"file:///C:/Users/zzx/Desktop/naga123/client/assets/script/common/loading.ts\"), () => import(\"file:///C:/Users/zzx/Desktop/naga123/client/assets/script/common/tips.ts\"), () => import(\"file:///C:/Users/zzx/Desktop/naga123/client/assets/script/hall/hall.ts\"), () => import(\"file:///C:/Users/zzx/Desktop/naga123/client/assets/script/hall/hall_bind_account.ts\"), () => import(\"file:///C:/Users/zzx/Desktop/naga123/client/assets/script/login/login.ts\"), () => import(\"file:///C:/Users/zzx/Desktop/naga123/client/assets/script/login/login_account.ts\"), () => import(\"file:///C:/Users/zzx/Desktop/naga123/client/assets/script/sgj/game_sgj.ts\"), () => import(\"file:///C:/Users/zzx/Desktop/naga123/client/assets/script/sgj/sgj_btn.ts\"), () => import(\"file:///C:/Users/zzx/Desktop/naga123/client/assets/script/sgj/sgj_normal.ts\"), () => import(\"file:///C:/Users/zzx/Desktop/naga123/client/assets/script/sgj/sgj_run.ts\"), () => import(\"file:///C:/Users/zzx/Desktop/naga123/client/assets/script/sgj/sgj_view.ts\"), () => import(\"file:///C:/Users/zzx/Desktop/naga123/client/assets/script/utils/HTTP.ts\"), () => import(\"file:///C:/Users/zzx/Desktop/naga123/client/assets/script/utils/userMgr.ts\"), () => import(\"file:///C:/Users/zzx/Desktop/naga123/client/assets/script/utils/websocket.ts\")];\n    for (const request of requests) {\n        try {\n            await request();\n        } catch (_err) {\n            // The error should have been caught by executor.\n        }\n    }\n})();\n    "]}
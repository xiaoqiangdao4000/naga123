{"version":3,"sources":["file:///C:/Users/zzx/Desktop/naga123/client/assets/script/login/login_message.ts"],"names":["_decorator","Component","director","ccclass","property","login_message","_ws","start","connectServer","globalThis","update","deltaTime","ws","WebSocket","onopen","console","log","onmessage","result","msg","JSON","parse","data","type","onMessage","eventTargets","emit","userMgr","userid","nickname","score","password","roomid","bindaccount","saveAccount","close","loadScene","sendMssage","send","stringify"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, director } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('login_message')\r\nexport class login_message extends Component {\r\n\r\n    _ws: any = null;\r\n\r\n    start() {\r\n        this.connectServer();\r\n        globalThis.login_message = this;\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n\r\n    connectServer() {\r\n        const ws = new WebSocket('ws://127.0.0.1:3000')\r\n        this._ws = ws;\r\n        ws.onopen = () => {\r\n            console.log('连接--登录服务器--成功！');\r\n        }\r\n\r\n        ws.onmessage = (result) => {\r\n            let msg = JSON.parse(result.data);\r\n            let type = msg.type;\r\n            let data = msg.data;\r\n            this.onMessage(type, data);\r\n        }\r\n    }\r\n\r\n    onMessage(type, data) {\r\n        switch (type) {\r\n            case 'guestLogin':\r\n                {\r\n                    if (data == 0) {\r\n                        globalThis.eventTargets.emit('login_popTips', '游客登陆失败！');\r\n                        break;\r\n                    }\r\n                    globalThis.userMgr.userid = data.userid;\r\n                    globalThis.userMgr.nickname = data.nickname;\r\n                    globalThis.userMgr.score = data.score;\r\n                    globalThis.userMgr.password = data.password;\r\n                    globalThis.userMgr.roomid = data.roomid;\r\n                    globalThis.userMgr.bindaccount = data.bindaccount;\r\n                    globalThis.userMgr.saveAccount(data.nickname, data.password);\r\n                    console.log('游客登陆成功!服务器返回:' + data.userid + ' ,' + data.nickname + ' ,' + data.score + ' ,' + data.password + ' ,' + data.roomid + ' ,' + data.bindaccount);\r\n                    this._ws.close();\r\n                    console.log('---开始切换场景：主动关闭登陆连接---');\r\n                    director.loadScene('hallScene');\r\n                    break;\r\n                }\r\n            case 'accountLogin':\r\n                {\r\n                    if (data == 0) {\r\n                        globalThis.eventTargets.emit('login_popTips', '账号登陆失败:用户不存在或密码错误!');\r\n                        break;\r\n                    }\r\n                    globalThis.userMgr.userid = data.userid;\r\n                    globalThis.userMgr.nickname = data.nickname;\r\n                    globalThis.userMgr.score = data.score;\r\n                    globalThis.userMgr.password = data.password;\r\n                    globalThis.userMgr.roomid = data.roomid;\r\n                    globalThis.userMgr.bindaccount = data.bindaccount;\r\n                    globalThis.userMgr.saveAccount(data.nickname, data.password);\r\n                    console.log('账号登陆成功!服务器返回:' + data.userid + ' ,' + data.nickname + ' ,' + data.score + ' ,' + data.password + ' ,' + data.roomid + ' ,' + data.bindaccount);\r\n                    this._ws.close();\r\n                    console.log('---开始切换场景：主动关闭登陆连接---');\r\n                    director.loadScene('hallScene');\r\n                    break;\r\n                }\r\n            default:\r\n                break;\r\n        }\r\n        // console.log('接受到服务器消息:' + type + ',数据:' + data);\r\n    }\r\n\r\n    sendMssage(type: any, data: any) {\r\n        let msg = {\r\n            type: type,\r\n            data: data,\r\n        }\r\n        this._ws.send(JSON.stringify(msg));\r\n    }\r\n}\r\n\r\n"]}
{"version":3,"sources":["file:///Users/zzx/Desktop/naga123/client/assets/script/sgj/sgj_btn.ts"],"names":["_decorator","Component","Node","ccclass","property","sgj_btn","tooltip","readonly","type","EventHandler","_touchCounter","_isTouching","onEnable","node","on","EventType","TOUCH_START","_onTouchStart","TOUCH_END","_onTouchEnd","TOUCH_CANCEL","_onTouchCancel","onDisable","off","event","console","log","publishOneTouch","isLongPress","schedule","_touchCounterCallback","touchInterval","unschedule","longTouchEvents","forEach","eventHandler","emit","handleToucheLogic","touchCounter","customEventData","start","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, EventHandler, EventTouch } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('sgj_btn')\nexport class sgj_btn extends Component {\n    @property({\n        tooltip: \"触摸回调间隔（秒）。假如为0.1，那么1秒内会回调10次 ${longTouchEvents} 事件数组\"\n    })\n    touchInterval: number = 0.2;\n\n    @property({\n        tooltip: \"是否支持长按\"\n    })\n    isLongPress: boolean = true;\n\n\n    @property({\n        readonly: true,\n        tooltip: \"是否支持多点触控（当前还不支持）\"\n    })\n    enableMultiTouching: boolean = false;\n\n    @property({\n        type: [Component.EventHandler],\n        tooltip: \"回调事件数组，每间隔 ${toucheInterval}s 回调一次\"\n    })\n    longTouchEvents: EventHandler[] = [];\n\n\n    /**\n     * 触摸计数器，用于统计本次长按的回调次数\n     */\n    private _touchCounter: number = 0;\n\n    /**\n     * 标记当前是否在触摸这个节点\n     */\n    private _isTouching: boolean = false;\n\n    onEnable() {\n        this.node.on(Node.EventType.TOUCH_START, this._onTouchStart, this);\n        this.node.on(Node.EventType.TOUCH_END, this._onTouchEnd, this);\n        this.node.on(Node.EventType.TOUCH_CANCEL, this._onTouchCancel, this);\n    }\n\n    onDisable() {\n        this.node.off(Node.EventType.TOUCH_START, this._onTouchStart, this);\n        this.node.off(Node.EventType.TOUCH_END, this._onTouchEnd, this);\n        this.node.off(Node.EventType.TOUCH_CANCEL, this._onTouchCancel, this);\n    }\n\n    private _onTouchStart(event: EventTouch) {\n\n        console.log('bbbbbbbbbb')\n        this._isTouching = true;\n        // 第一次触摸立即回调一次\n        this.publishOneTouch();\n\n        //不支持长按\n        if (this.isLongPress == true) {\n            this._isTouching = true;\n        }\n        else {\n            this._isTouching = false;\n            return;\n        }\n\n\n        // 然后开启计时器，计算后续的长按相当于触摸了多少次\n        this.schedule(this._touchCounterCallback, this.touchInterval);\n\n\n    }\n\n    private _onTouchEnd(event: EventTouch) {\n        this._isTouching = false;\n        this._touchCounter = 0;\n        this.unschedule(this._touchCounterCallback);\n    }\n\n    private _onTouchCancel(event: EventTouch) {\n        this._isTouching = false;\n        this._touchCounter = 0;\n        this.unschedule(this._touchCounterCallback);\n    }\n\n    private _touchCounterCallback() {\n        if (this._isTouching) {\n            this.publishOneTouch();\n        } else {\n            this.unschedule(this._touchCounterCallback);\n        }\n    }\n\n    /**\n     * 通知出去：被点击/触摸了一次，长按时，会连续多次回调这个方法\n     */\n    private publishOneTouch() {\n        if (!this._isTouching) {\n            return;\n        }\n        this._touchCounter++;\n        this.longTouchEvents.forEach((eventHandler: EventHandler) => {\n            eventHandler.emit([this._touchCounter]);\n        });\n    }\n\n    handleToucheLogic(touchCounter: number, customEventData?: any) {\n\n        console.log(`界面就不演示输出 CustomEventData了 - `, customEventData);\n        // console.log(customEventData);\n    }\n\n    start() {\n\n    }\n\n    update(deltaTime: number) {\n\n    }\n}"]}
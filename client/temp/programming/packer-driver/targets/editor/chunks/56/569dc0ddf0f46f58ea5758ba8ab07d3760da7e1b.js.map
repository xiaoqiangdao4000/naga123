{"version":3,"sources":["file:///Users/zzx/Desktop/naga123/client/assets/script/hall/hall_message.ts"],"names":["_decorator","Component","ccclass","property","hall_message","_ws","start","connectServer","globalThis","update","deltaTime","ws","WebSocket","onopen","console","log","onmessage","result","msg","JSON","parse","data","type","onMessage","eventTargets","emit","userMgr","userid","nickname","password","bind_account","saveAccount","sendMssage","send","stringify"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;;;;;;;;OACf;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;;8BAGjBI,Y,WADZF,OAAO,CAAC,cAAD,C,gBAAR,MACaE,YADb,SACkCH,SADlC,CAC4C;AAAA;AAAA;AAAA,eACxCI,GADwC,GAC7B,IAD6B;AAAA;;AAGxCC,QAAAA,KAAK,GAAG;AACJ,eAAKC,aAAL;AACAC,UAAAA,UAAU,CAACJ,YAAX,GAA0B,IAA1B;AACH;;AAEDK,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAEDH,QAAAA,aAAa,GAAG;AACZ,gBAAMI,EAAE,GAAG,IAAIC,SAAJ,CAAc,qBAAd,CAAX;AACA,eAAKP,GAAL,GAAWM,EAAX;;AACAA,UAAAA,EAAE,CAACE,MAAH,GAAY,MAAM;AACdC,YAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH,WAFD;;AAIAJ,UAAAA,EAAE,CAACK,SAAH,GAAgBC,MAAD,IAAY;AACvB,gBAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,CAACI,IAAlB,CAAV;AACA,gBAAIC,IAAI,GAAGJ,GAAG,CAACI,IAAf;AACA,gBAAID,IAAI,GAAGH,GAAG,CAACG,IAAf;AACA,iBAAKE,SAAL,CAAeD,IAAf,EAAqBD,IAArB;AACH,WALD;AAMH;;AAEDE,QAAAA,SAAS,CAACD,IAAD,EAAOD,IAAP,EAAa;AAClB,kBAAQC,IAAR;AACI,iBAAK,mBAAL;AACI;AACI,oBAAID,IAAI,IAAI,CAAZ,EAAe;AACXb,kBAAAA,UAAU,CAACgB,YAAX,CAAwBC,IAAxB,CAA6B,cAA7B,EAA6C,SAA7C;AACA;AACH;;AACDX,gBAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBM,IAAvB;AACAb,gBAAAA,UAAU,CAACkB,OAAX,CAAmBC,MAAnB,GAA4BN,IAAI,CAACM,MAAjC;AACAnB,gBAAAA,UAAU,CAACkB,OAAX,CAAmBE,QAAnB,GAA8BP,IAAI,CAACO,QAAnC;AACApB,gBAAAA,UAAU,CAACkB,OAAX,CAAmBG,QAAnB,GAA8BR,IAAI,CAACQ,QAAnC;AACArB,gBAAAA,UAAU,CAACkB,OAAX,CAAmBI,YAAnB,GAAkCT,IAAI,CAACS,YAAvC;AACAtB,gBAAAA,UAAU,CAACkB,OAAX,CAAmBK,WAAnB,CAA+BV,IAAI,CAACO,QAApC,EAA8CP,IAAI,CAACQ,QAAnD;AACAf,gBAAAA,OAAO,CAACC,GAAR,CAAY,aAAaM,IAAI,CAACM,MAAlB,GAA2B,IAA3B,GAAkCN,IAAI,CAACO,QAAvC,GAAmD,IAAnD,GAA0DP,IAAI,CAACQ,QAA/D,GAA0E,IAA1E,GAAiFR,IAAI,CAACS,YAAlG;AACA;AACH;;AACL;AACI;AAjBR;AAmBH;;AAEDE,QAAAA,UAAU,CAACV,IAAD,EAAYD,IAAZ,EAAuB;AAC7B,cAAIH,GAAG,GAAG;AACNI,YAAAA,IAAI,EAAEA,IADA;AAEND,YAAAA,IAAI,EAAEA;AAFA,WAAV;;AAIA,eAAKhB,GAAL,CAAS4B,IAAT,CAAcd,IAAI,CAACe,SAAL,CAAehB,GAAf,CAAd;AACH;;AAvDuC,O","sourcesContent":["import { _decorator, Component, Node } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('hall_message')\nexport class hall_message extends Component {\n    _ws: any = null;\n\n    start() {\n        this.connectServer();\n        globalThis.hall_message = this;\n    }\n\n    update(deltaTime: number) {\n\n    }\n\n    connectServer() {\n        const ws = new WebSocket('ws://127.0.0.1:3001')\n        this._ws = ws;\n        ws.onopen = () => {\n            console.log('连接--大厅服务器--成功！');\n        }\n\n        ws.onmessage = (result) => {\n            let msg = JSON.parse(result.data);\n            let type = msg.type;\n            let data = msg.data;\n            this.onMessage(type, data);\n        }\n    }\n\n    onMessage(type, data) {\n        switch (type) {\n            case 'hall_bind_account':\n                {\n                    if (data == 0) {\n                        globalThis.eventTargets.emit('hall_popTips', '绑定账号失败！');\n                        break;\n                    }\n                    console.log('bang = ', data);\n                    globalThis.userMgr.userid = data.userid;\n                    globalThis.userMgr.nickname = data.nickname;\n                    globalThis.userMgr.password = data.password;\n                    globalThis.userMgr.bind_account = data.bind_account;\n                    globalThis.userMgr.saveAccount(data.nickname, data.password);\n                    console.log('绑定账号成功!:' + data.userid + ' ,' + data.nickname +  ' ,' + data.password + ' ,' + data.bind_account);\n                    break;\n                }\n            default:\n                break;\n        }\n    }\n\n    sendMssage(type: any, data: any) {\n        let msg = {\n            type: type,\n            data: data,\n        }\n        this._ws.send(JSON.stringify(msg));\n    }\n}\n\n\n"]}
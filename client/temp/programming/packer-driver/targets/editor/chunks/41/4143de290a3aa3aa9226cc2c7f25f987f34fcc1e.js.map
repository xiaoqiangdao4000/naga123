{"version":3,"sources":["file:///Users/zzx/Desktop/naga123/client/assets/script/login/loginMessage.ts"],"names":["_decorator","Component","ccclass","property","loginMessage","_ws","start","connectServer","globalThis","update","deltaTime","ws","WebSocket","onopen","console","log","onmessage","result","msg","JSON","parse","data","type","onMessage","userMgr","userid","nickname","score","SendMssage","send","stringify"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;;;;;;;;OACf;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;;8BAGjBI,Y,WADZF,OAAO,CAAC,cAAD,C,gBAAR,MACaE,YADb,SACkCH,SADlC,CAC4C;AAAA;AAAA;AAAA,eAExCI,GAFwC,GAE7B,IAF6B;AAAA;;AAIxCC,QAAAA,KAAK,GAAG;AACJ,eAAKC,aAAL;AACAC,UAAAA,UAAU,CAACJ,YAAX,GAA0B,IAA1B;AACH;;AAEDK,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAEDH,QAAAA,aAAa,GAAG;AACZ,gBAAMI,EAAE,GAAG,IAAIC,SAAJ,CAAc,qBAAd,CAAX;AACA,eAAKP,GAAL,GAAWM,EAAX;;AACAA,UAAAA,EAAE,CAACE,MAAH,GAAY,MAAM;AACdC,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,WAFD;;AAIAJ,UAAAA,EAAE,CAACK,SAAH,GAAgBC,MAAD,IAAY;AACvB,gBAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,CAACI,IAAlB,CAAV;AACA,gBAAIC,IAAI,GAAGJ,GAAG,CAACI,IAAf;AACA,gBAAID,IAAI,GAAGH,GAAG,CAACG,IAAf;AACA,iBAAKE,SAAL,CAAeD,IAAf,EAAqBD,IAArB;AACH,WALD;AAMH;;AAEDE,QAAAA,SAAS,CAACD,IAAD,EAAOD,IAAP,EAAa;AAClB,kBAAQC,IAAR;AACI,iBAAK,YAAL;AACId,cAAAA,UAAU,CAACgB,OAAX,CAAmBC,MAAnB,GAA4BJ,IAAI,CAACI,MAAjC;AACAjB,cAAAA,UAAU,CAACgB,OAAX,CAAmBE,QAAnB,GAA8BL,IAAI,CAACK,QAAnC;AACAlB,cAAAA,UAAU,CAACgB,OAAX,CAAmBG,KAAnB,GAA2BN,IAAI,CAACM,KAAhC;AACAb,cAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBM,IAAI,CAACI,MAArB,GAA8B,YAA9B,GAA6CJ,IAAI,CAACK,QAA9D;AACA;;AACJ;AACI;AARR,WADkB,CAWlB;;AACH;;AAEDE,QAAAA,UAAU,CAACN,IAAD,EAAYD,IAAZ,EAAuB;AAC7B,cAAIH,GAAG,GAAG;AACNI,YAAAA,IAAI,EAAEA,IADA;AAEND,YAAAA,IAAI,EAAEA;AAFA,WAAV;;AAIA,eAAKhB,GAAL,CAASwB,IAAT,CAAcV,IAAI,CAACW,SAAL,CAAeZ,GAAf,CAAd;AACH;;AAhDuC,O","sourcesContent":["import { _decorator, Component, Node } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('loginMessage')\nexport class loginMessage extends Component {\n\n    _ws: any = null;\n\n    start() {\n        this.connectServer();\n        globalThis.loginMessage = this;\n    }\n\n    update(deltaTime: number) {\n\n    }\n\n    connectServer() {\n        const ws = new WebSocket('ws://127.0.0.1:3000')\n        this._ws = ws;\n        ws.onopen = () => {\n            console.log('连接服务器成功！');\n        }\n\n        ws.onmessage = (result) => {\n            let msg = JSON.parse(result.data);\n            let type = msg.type;\n            let data = msg.data;\n            this.onMessage(type, data);\n        }\n    }\n\n    onMessage(type, data) {\n        switch (type) {\n            case 'guestLogin':\n                globalThis.userMgr.userid = data.userid;\n                globalThis.userMgr.nickname = data.nickname;\n                globalThis.userMgr.score = data.score;\n                console.log('登陆成功userid:' + data.userid + ',nickname:' + data.nickname);\n                break;\n            default:\n                break;\n        }\n        // console.log('接受到服务器消息:' + type + ',数据:' + data);\n    }\n\n    SendMssage(type: any, data: any) {\n        let msg = {\n            type: type,\n            data: data,\n        }\n        this._ws.send(JSON.stringify(msg));\n    }\n}\n\n"]}
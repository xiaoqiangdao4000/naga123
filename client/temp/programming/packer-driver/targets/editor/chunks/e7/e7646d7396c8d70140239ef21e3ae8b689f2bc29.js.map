{"version":3,"sources":["file:///C:/Users/zzx/Desktop/naga123/client/assets/script/sgj/sgj_endFlash.ts"],"names":["_decorator","Component","ccclass","property","sgj_endFlash","steps","start","globalThis","play","step","schedule","updateRun","stop","unschedule","i","length","index","mask","sgj_view","mask_node","light","light_node","active","resetMask","update","deltaTime"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;;;;;;;;OACf;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U,GAE9B;;8BAEaI,Y,WADZF,OAAO,CAAC,cAAD,C,gBAAR,MACaE,YADb,SACkCH,SADlC,CAC4C;AAAA;AAAA;AAAA,eACxCI,KADwC;AAAA;;AAGxCC,QAAAA,KAAK,GAAG;AACJC,UAAAA,UAAU,CAACH,YAAX,GAA0B,IAA1B;AACH;;AAEDI,QAAAA,IAAI,CAACC,IAAD,EAAW;AACX,eAAKJ,KAAL,GAAaI,IAAb;AACA,eAAKC,QAAL,CAAc,KAAKC,SAAnB,EAA8B,GAA9B;AACH;;AAEDC,QAAAA,IAAI,GAAG;AACH,eAAKC,UAAL,CAAgB,KAAKF,SAArB;AACH;;AAEDA,QAAAA,SAAS,GAAG;AAER,eAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKT,KAAL,CAAWU,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,gBAAIE,KAAK,GAAG,KAAKX,KAAL,CAAWS,CAAX,CAAZ;AACA,gBAAIG,IAAI,GAAGV,UAAU,CAACW,QAAX,CAAoBC,SAApB,CAA8BH,KAA9B,CAAX;AACA,gBAAII,KAAK,GAAGb,UAAU,CAACW,QAAX,CAAoBG,UAApB,CAA+BL,KAA/B,CAAZ;AACAC,YAAAA,IAAI,CAACK,MAAL,GAAc,CAACL,IAAI,CAACK,MAApB;AACAF,YAAAA,KAAK,CAACE,MAAN,GAAe,CAACF,KAAK,CAACE,MAAtB;AACH;AAEJ;;AAEDC,QAAAA,SAAS,GAAG;AACR,eAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBP,YAAAA,UAAU,CAACW,QAAX,CAAoBC,SAApB,CAA8BL,CAA9B,EAAiCQ,MAAjC,GAA0C,KAA1C;AACAf,YAAAA,UAAU,CAACW,QAAX,CAAoBG,UAApB,CAA+BP,CAA/B,EAAkCQ,MAAlC,GAA2C,KAA3C;AACH;AACJ;;AAEDE,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AArCuC,O","sourcesContent":["import { _decorator, Component, Node } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n//所有动画播放完毕后，所有中奖格子闪动\r\n@ccclass('sgj_endFlash')\r\nexport class sgj_endFlash extends Component {\r\n    steps: [];\r\n\r\n    start() {\r\n        globalThis.sgj_endFlash = this;\r\n    }\r\n\r\n    play(step: []) {\r\n        this.steps = step;\r\n        this.schedule(this.updateRun, 0.5);\r\n    }\r\n\r\n    stop() {\r\n        this.unschedule(this.updateRun);\r\n    }\r\n\r\n    updateRun() {\r\n\r\n        for (let i = 0; i < this.steps.length; i++) {\r\n            let index = this.steps[i];\r\n            let mask = globalThis.sgj_view.mask_node[index];\r\n            let light = globalThis.sgj_view.light_node[index];\r\n            mask.active = !mask.active;\r\n            light.active = !light.active;\r\n        }\r\n\r\n    }\r\n\r\n    resetMask() {\r\n        for (let i = 0; i < 24; i++) {\r\n            globalThis.sgj_view.mask_node[i].active = false;\r\n            globalThis.sgj_view.light_node[i].active = false;\r\n        }\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n}\r\n\r\n"]}
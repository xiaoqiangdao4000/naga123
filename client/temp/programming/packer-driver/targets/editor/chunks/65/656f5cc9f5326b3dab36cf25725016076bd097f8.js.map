{"version":3,"sources":["file:///Users/zzx/Desktop/naga123/client/assets/script/login/login_message.ts"],"names":["_decorator","Component","director","HTTP","ccclass","property","login_message","_ws","start","globalThis","update","deltaTime","onMessage","type","data","eventTargets","emit","userMgr","userid","nickname","score","password","roomid","bind_account","saveAccount","console","log","close","loadScene","sendMssage","msg","getInstance","sendRequest"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,Q,OAAAA,Q;;AAC/BC,MAAAA,I;;;;;;;;;OACD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;+BAGjBM,a,WADZF,OAAO,CAAC,eAAD,C,gBAAR,MACaE,aADb,SACmCL,SADnC,CAC6C;AAAA;AAAA;AAAA,eAEzCM,GAFyC,GAE9B,IAF8B;AAAA;;AAIzCC,QAAAA,KAAK,GAAG;AACL;AACCC,UAAAA,UAAU,CAACH,aAAX,GAA2B,IAA3B;AACH;;AAEDI,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB,CAXwC,CAczC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,QAAAA,SAAS,CAACC,IAAD,EAAOC,IAAP,EAAa;AAClB,kBAAQD,IAAR;AACI,iBAAK,YAAL;AACI;AACI,oBAAIC,IAAI,IAAI,CAAZ,EAAe;AACXL,kBAAAA,UAAU,CAACM,YAAX,CAAwBC,IAAxB,CAA6B,eAA7B,EAA8C,SAA9C;AACA;AACH;;AACDP,gBAAAA,UAAU,CAACQ,OAAX,CAAmBC,MAAnB,GAA4BJ,IAAI,CAACI,MAAjC;AACAT,gBAAAA,UAAU,CAACQ,OAAX,CAAmBE,QAAnB,GAA8BL,IAAI,CAACK,QAAnC;AACAV,gBAAAA,UAAU,CAACQ,OAAX,CAAmBG,KAAnB,GAA2BN,IAAI,CAACM,KAAhC;AACAX,gBAAAA,UAAU,CAACQ,OAAX,CAAmBI,QAAnB,GAA8BP,IAAI,CAACO,QAAnC;AACAZ,gBAAAA,UAAU,CAACQ,OAAX,CAAmBK,MAAnB,GAA4BR,IAAI,CAACQ,MAAjC;AACAb,gBAAAA,UAAU,CAACQ,OAAX,CAAmBM,YAAnB,GAAkCT,IAAI,CAACS,YAAvC;AACAd,gBAAAA,UAAU,CAACQ,OAAX,CAAmBO,WAAnB,CAA+BV,IAAI,CAACK,QAApC,EAA8CL,IAAI,CAACO,QAAnD;AACAI,gBAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBZ,IAAI,CAACI,MAAvB,GAAgC,IAAhC,GAAuCJ,IAAI,CAACK,QAA5C,GAAuD,IAAvD,GAA8DL,IAAI,CAACM,KAAnE,GAA2E,IAA3E,GAAkFN,IAAI,CAACO,QAAvF,GAAkG,IAAlG,GAAyGP,IAAI,CAACQ,MAA9G,GAAuH,IAAvH,GAA8HR,IAAI,CAACS,YAA/I;;AACA,qBAAKhB,GAAL,CAASoB,KAAT;;AACAF,gBAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAxB,gBAAAA,QAAQ,CAAC0B,SAAT,CAAmB,WAAnB;AACA;AACH;;AACL,iBAAK,cAAL;AACI;AACI,oBAAId,IAAI,IAAI,CAAZ,EAAe;AACXL,kBAAAA,UAAU,CAACM,YAAX,CAAwBC,IAAxB,CAA6B,eAA7B,EAA8C,oBAA9C;AACA;AACH;;AACDP,gBAAAA,UAAU,CAACQ,OAAX,CAAmBC,MAAnB,GAA4BJ,IAAI,CAACI,MAAjC;AACAT,gBAAAA,UAAU,CAACQ,OAAX,CAAmBE,QAAnB,GAA8BL,IAAI,CAACK,QAAnC;AACAV,gBAAAA,UAAU,CAACQ,OAAX,CAAmBG,KAAnB,GAA2BN,IAAI,CAACM,KAAhC;AACAX,gBAAAA,UAAU,CAACQ,OAAX,CAAmBI,QAAnB,GAA8BP,IAAI,CAACO,QAAnC;AACAZ,gBAAAA,UAAU,CAACQ,OAAX,CAAmBK,MAAnB,GAA4BR,IAAI,CAACQ,MAAjC;AACAb,gBAAAA,UAAU,CAACQ,OAAX,CAAmBM,YAAnB,GAAkCT,IAAI,CAACS,YAAvC;AACAd,gBAAAA,UAAU,CAACQ,OAAX,CAAmBO,WAAnB,CAA+BV,IAAI,CAACK,QAApC,EAA8CL,IAAI,CAACO,QAAnD;AACAI,gBAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBZ,IAAI,CAACI,MAAvB,GAAgC,IAAhC,GAAuCJ,IAAI,CAACK,QAA5C,GAAuD,IAAvD,GAA8DL,IAAI,CAACM,KAAnE,GAA2E,IAA3E,GAAkFN,IAAI,CAACO,QAAvF,GAAkG,IAAlG,GAAyGP,IAAI,CAACQ,MAA9G,GAAuH,IAAvH,GAA8HR,IAAI,CAACS,YAA/I;;AACA,qBAAKhB,GAAL,CAASoB,KAAT;;AACAF,gBAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAxB,gBAAAA,QAAQ,CAAC0B,SAAT,CAAmB,WAAnB;AACA;AACH;;AACL;AACI;AAxCR,WADkB,CA2ClB;;AACH;;AAEDC,QAAAA,UAAU,CAAChB,IAAD,EAAYC,IAAZ,EAAuB;AAC7B,cAAIgB,GAAG,GAAG;AACNjB,YAAAA,IAAI,EAAEA,IADA;AAENC,YAAAA,IAAI,EAAEA;AAFA,WAAV;AAIA;AAAA;AAAA,4BAAKiB,WAAL,GAAmBC,WAAnB,GAL6B,CAM9B;AACF;;AAlFwC,O","sourcesContent":["import { _decorator, Component, Node, director } from 'cc';\nimport HTTP from '../utils/HTTP';\nconst { ccclass, property } = _decorator;\n\n@ccclass('login_message')\nexport class login_message extends Component {\n\n    _ws: any = null;\n\n    start() {\n       // this.connectServer();\n        globalThis.login_message = this;\n    }\n\n    update(deltaTime: number) {\n\n    }\n\n    \n    // connectServer() {\n    //     const ws = new WebSocket('ws://127.0.0.1:3000')\n    //     this._ws = ws;\n    //     ws.onopen = () => {\n    //         console.log('连接--登录服务器--成功！');\n    //     }\n\n    //     ws.onmessage = (result) => {\n    //         let msg = JSON.parse(result.data);\n    //         let type = msg.type;\n    //         let data = msg.data;\n    //         this.onMessage(type, data);\n    //     }\n    // }\n\n    onMessage(type, data) {\n        switch (type) {\n            case 'guestLogin':\n                {\n                    if (data == 0) {\n                        globalThis.eventTargets.emit('login_popTips', '游客登陆失败！');\n                        break;\n                    }\n                    globalThis.userMgr.userid = data.userid;\n                    globalThis.userMgr.nickname = data.nickname;\n                    globalThis.userMgr.score = data.score;\n                    globalThis.userMgr.password = data.password;\n                    globalThis.userMgr.roomid = data.roomid;\n                    globalThis.userMgr.bind_account = data.bind_account;\n                    globalThis.userMgr.saveAccount(data.nickname, data.password);\n                    console.log('游客登陆成功!服务器返回:' + data.userid + ' ,' + data.nickname + ' ,' + data.score + ' ,' + data.password + ' ,' + data.roomid + ' ,' + data.bind_account);\n                    this._ws.close();\n                    console.log('---开始切换场景：主动关闭登陆连接---');\n                    director.loadScene('hallScene');\n                    break;\n                }\n            case 'accountLogin':\n                {\n                    if (data == 0) {\n                        globalThis.eventTargets.emit('login_popTips', '账号登陆失败:用户不存在或密码错误!');\n                        break;\n                    }\n                    globalThis.userMgr.userid = data.userid;\n                    globalThis.userMgr.nickname = data.nickname;\n                    globalThis.userMgr.score = data.score;\n                    globalThis.userMgr.password = data.password;\n                    globalThis.userMgr.roomid = data.roomid;\n                    globalThis.userMgr.bind_account = data.bind_account;\n                    globalThis.userMgr.saveAccount(data.nickname, data.password);\n                    console.log('账号登陆成功!服务器返回:' + data.userid + ' ,' + data.nickname + ' ,' + data.score + ' ,' + data.password + ' ,' + data.roomid + ' ,' + data.bind_account);\n                    this._ws.close();\n                    console.log('---开始切换场景：主动关闭登陆连接---');\n                    director.loadScene('hallScene');\n                    break;\n                }\n            default:\n                break;\n        }\n        // console.log('接受到服务器消息:' + type + ',数据:' + data);\n    }\n\n    sendMssage(type: any, data: any) {\n        let msg = {\n            type: type,\n            data: data,\n        }\n        HTTP.getInstance().sendRequest();\n       // this._ws.send(JSON.stringify(msg));\n    }\n}\n\n"]}
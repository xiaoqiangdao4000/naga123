{"version":3,"sources":["file:///Users/zzx/Desktop/naga123/client/assets/script/sgj/game_sgj.ts"],"names":["_decorator","Component","EventTarget","randomRangeInt","HTTP","ccclass","property","globalThis","sgjEvent","game_sgj","cmd_c_bet","type","data","cmd_c_bigSmall","cmd_s_bigSmall","iswin","bigsmall","wins_core","user_score","cmd_s_gameEnd","step","area","tiems","record","eventid","event_count","event_step","event_area","event_times","event_score","times","serverStep","start","curgame","sgj_normal","play","i","bs","sgj_view","bet_score","update","deltaTime","onEnable","on","sgjCallBack","onDisable","off","arg1","console","log","onMessage","sendMssage","msg","getInstance","send","JSON","stringify"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, SpriteFrame, Sprite, resources, Prefab, instantiate, EventTarget, randomRangeInt } from 'cc';\nimport HTTP from '../utils/HTTP';\nimport { AudioMgr } from '../utils/AudioMgr';\n\nconst { ccclass, property } = _decorator;\n\nglobalThis.sgjEvent = new EventTarget();\n\n@ccclass('game_sgj')\nexport class game_sgj extends Component {\n\n    //客户端消息----下注\n    cmd_c_bet =\n        {\n            type: 'cmd_c_bet',\n            data: [0, 0, 0, 0, 0, 0, 0, 0],\n        }\n\n    //客户端消息----猜大小,//猜大小，0为小（0-7），1为大（8-15）\n    cmd_c_bigSmall =\n        {\n            type: 'cmd_c_bigSmall',\n            data: 0, //赌注\n        }\n\n    //服务端消息----猜大小\n    cmd_s_bigSmall =\n        {\n            type: 'cmd_s_bigSmall',\n            iswin: 0,    //猜大小成功 0失败，1成功。\n            bigsmall: 0, //大小的实际数值\n            wins_core: 0, //赢分\n            user_score: 0,//分数\n        }\n\n    //服务端消息----开奖       \n    cmd_s_gameEnd =\n        {\n            type: 'cmd_s_gameEnd',\n            step: 0,    //开奖格子\n            area: 0,    //开奖区域\n            tiems: 0,   //倍数\n            wins_core: 0,   //赢分\n            user_score: 0,  //分数\n            record: [0, 0, 0, 0, 0, 0, 0, 0],   //历史记录\n\n            eventid: 0,          //事件id\n            event_count: 0,\n            event_step: [0, 1],    //开奖格子,数组[24]\n            event_area: 0,       //开奖区域,数组[24]\n            event_times: 0,      //倍数,数组[24]\n            event_score: 0,      //当前赢分,数组[24]\n        }\n    \n    //倍率\n    times = [5,10,15,20,30,40,100];\n\n    //0苹果、1橙子、2木瓜、3铃铛、4西瓜、5双星、677、7bar,8lucky\n    //倍率：5,10,15,20,30,40,100\n\n    serverStep = ['橙子','铃铛','小bar','bar','苹果','小苹果','木瓜','西瓜','小西瓜','lucky','苹果','小橙子','橙子','铃铛','小77','77','苹果','小木瓜','木瓜',\n                  '']\n\n    start() {\n        globalThis.curgame = this;\n        globalThis.sgj_normal.play()\n\n        //模拟服务器数据\n\n\n        //普通中奖\n        this.cmd_s_gameEnd.step = randomRangeInt(1, 25);\n        for(let i = 0; i < 8; i++)\n        {\n\n        }\n        \n        let bs = randomRangeInt(0,8);\n        this.cmd_s_gameEnd.tiems = this.times[bs];\n        this.cmd_s_gameEnd.wins_core = globalThis.sgj_view.bet_score\n    }\n\n    update(deltaTime: number) {\n\n    }\n\n    onEnable() {\n        globalThis.sgjEvent.on('sgj_callback', this.sgjCallBack, this);\n    }\n\n    onDisable() {\n        globalThis.sgjEvent.off('sgj_callback', this.sgjCallBack, this);\n    }\n\n    sgjCallBack(arg1: string) {\n        console.log('水果机回调函数:', arg1);\n\n        //if ()\n\n\n    }\n\n    //接受消息\n    onMessage(type, data) {\n        console.log('收到服务器消息：', data);\n    }\n\n    //发送消息\n    sendMssage(type: any, data: any) {\n        let msg = {\n            type: type,\n            data: data,\n        }\n        HTTP.getInstance().send(JSON.stringify(msg));\n    }\n}"]}
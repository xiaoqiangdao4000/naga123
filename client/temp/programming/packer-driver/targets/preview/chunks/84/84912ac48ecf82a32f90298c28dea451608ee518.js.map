{"version":3,"sources":["file:///Users/zzx/Desktop/naga123/client/assets/script/hall/hall_bind_account.ts"],"names":["_decorator","Component","EventTarget","EditBox","HTTP","ccclass","property","globalThis","eventTargets","bind_account","start","update","deltaTime","onBtnClick","event","customEventData","nickname","nickname_editbox","string","password","password_editbox","password1","password1_editbox","emit","data","userid","userMgr","hall_message","sendMssage","getInstance","sendRequest","onBindAccount","node","active"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,O,OAAAA,O;;AAC5CC,MAAAA,I;;;;;;;;;OACD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;AAE9B,UAAIO,UAAU,CAACC,YAAX,IAA2B,IAA/B,EAAqC;AACjCD,QAAAA,UAAU,CAACC,YAAX,GAA0B,IAAIN,WAAJ,EAA1B;AACH;;8BAGYO,Y,WADZJ,OAAO,CAAC,cAAD,C,UAGHC,QAAQ,CAACH,OAAD,C,UAGRG,QAAQ,CAACH,OAAD,C,UAGRG,QAAQ,CAACH,OAAD,C,2BATb,MACaM,YADb,SACkCR,SADlC,CAC4C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAWxCS,QAAAA,KAAK,GAAG,CACP;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CACzB;;AAEDC,QAAAA,UAAU,CAACC,KAAD,EAAaC,eAAb,EAAmC;AACzC,kBAAQA,eAAR;AACI,iBAAK,QAAL;AACI;AACI,oBAAIC,QAAQ,GAAG,KAAKC,gBAAL,CAAsBC,MAArC;AACA,oBAAIC,QAAQ,GAAG,KAAKC,gBAAL,CAAsBF,MAArC;AACA,oBAAIG,SAAS,GAAG,KAAKC,iBAAL,CAAuBJ,MAAvC;;AACA,oBAAIF,QAAQ,IAAI,EAAhB,EAAoB;AAChBT,kBAAAA,UAAU,CAACC,YAAX,CAAwBe,IAAxB,CAA6B,cAA7B,EAA6C,SAA7C;AACA;AACH;;AACD,oBAAIJ,QAAQ,IAAI,EAAhB,EAAoB;AAChBZ,kBAAAA,UAAU,CAACC,YAAX,CAAwBe,IAAxB,CAA6B,cAA7B,EAA6C,uBAA7C;AACA;AACH;;AACD,oBAAIF,SAAS,IAAI,EAAjB,EAAqB;AACjBd,kBAAAA,UAAU,CAACC,YAAX,CAAwBe,IAAxB,CAA6B,cAA7B,EAA6C,UAA7C;AACA;AACH;;AACD,oBAAIF,SAAS,IAAIF,QAAjB,EAA2B;AACvBZ,kBAAAA,UAAU,CAACC,YAAX,CAAwBe,IAAxB,CAA6B,cAA7B,EAA6C,gBAA7C;AACA;AACH;;AACD,oBAAIC,IAAI,GAAG;AACPC,kBAAAA,MAAM,EAAElB,UAAU,CAACmB,OAAX,CAAmBD,MADpB;AAEPT,kBAAAA,QAAQ,EAAEA,QAFH;AAGPG,kBAAAA,QAAQ,EAAEA;AAHH,iBAAX;AAKAZ,gBAAAA,UAAU,CAACoB,YAAX,CAAwBC,UAAxB,CAAmC,mBAAnC,EAAwDJ,IAAxD;AACA;AAAA;AAAA,kCAAKK,WAAL,GAAmBC,WAAnB,CAA+B,oBAA/B,EAAqDN,IAArD,EAA2DjB,UAAU,CAACmB,OAAX,CAAmBK,aAA9E;AACA;AACH;;AACL,iBAAK,WAAL;AACI;AACI,qBAAKC,IAAL,CAAUC,MAAV,GAAmB,KAAnB;AACA;AACH;;AACL;AACI;AArCR;AAuCH;;AAzDuC,O","sourcesContent":["import { _decorator, Component, Node, EventTarget, EditBox } from 'cc';\nimport HTTP from '../utils/HTTP';\nconst { ccclass, property } = _decorator;\n\nif (globalThis.eventTargets == null) {\n    globalThis.eventTargets = new EventTarget();\n}\n\n@ccclass('bind_account')\nexport class bind_account extends Component {\n\n    @property(EditBox)\n    nickname_editbox: EditBox;\n\n    @property(EditBox)\n    password_editbox: EditBox;\n\n    @property(EditBox)\n    password1_editbox: EditBox;\n\n    start() {\n    }\n\n    update(deltaTime: number) {\n    }\n\n    onBtnClick(event: any, customEventData: any) {\n        switch (customEventData) {\n            case 'btn_ok':\n                {\n                    let nickname = this.nickname_editbox.string;\n                    let password = this.password_editbox.string;\n                    let password1 = this.password1_editbox.string;\n                    if (nickname == '') {\n                        globalThis.eventTargets.emit('hall_popTips', '用户名不能为空');\n                        break;\n                    }\n                    if (password == '') {\n                        globalThis.eventTargets.emit('hall_popTips', '密码不能为空，请输入6~10位数字或字母！');\n                        break;\n                    }\n                    if (password1 == '') {\n                        globalThis.eventTargets.emit('hall_popTips', '请再次输入密码！');\n                        break;\n                    }\n                    if (password1 != password) {\n                        globalThis.eventTargets.emit('hall_popTips', '两次密码输入不一致，请确认！');\n                        break;\n                    }\n                    let data = {\n                        userid: globalThis.userMgr.userid,\n                        nickname: nickname,\n                        password: password,\n                    };\n                    globalThis.hall_message.sendMssage('hall_bind_account', data);\n                    HTTP.getInstance().sendRequest(\"/hall_bind_account\", data, globalThis.userMgr.onBindAccount)\n                    break;\n                }\n            case 'btn_close':\n                {\n                    this.node.active = false;\n                    break;\n                }\n            default:\n                break;\n        }\n    }\n}\n\n"]}
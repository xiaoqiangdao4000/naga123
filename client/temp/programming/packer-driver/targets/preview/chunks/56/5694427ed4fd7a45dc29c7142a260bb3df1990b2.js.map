{"version":3,"sources":["file:///C:/Users/zzx/Desktop/naga123/client/assets/script/sgj/game_sgj.ts"],"names":["_decorator","Component","HTTP","AudioMgr","ccclass","property","game_sgj","cmd_c_bet","type","data","cmd_c_bigSmall","cmd_s_bigSmall","iswin","bigsmall","wins_core","user_score","cmd_s_gameEnd","step","area","tiems","record","eventid","event_count","event_step","event_area","event_times","event_score","start","globalThis","curgame","inst","play","update","deltaTime","onMessage","console","log","sendMssage","msg","getInstance","send","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AACdC,MAAAA,I;;AACEC,MAAAA,Q,iBAAAA,Q;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;0BAGjBM,Q,WADZF,OAAO,CAAC,UAAD,C,gBAAR,MACaE,QADb,SAC8BL,SAD9B,CACwC;AAAA;AAAA;AAAA,eAGpCM,SAHoC,GAIhC;AACIC,YAAAA,IAAI,EAAE,WADV;AAEIC,YAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB;AAFV,WAJgC;AAAA,eAUpCC,cAVoC,GAWhC;AACIF,YAAAA,IAAI,EAAE,gBADV;AAEIC,YAAAA,IAAI,EAAE,CAFV,CAEa;;AAFb,WAXgC;AAAA,eAiBpCE,cAjBoC,GAkBhC;AACIH,YAAAA,IAAI,EAAE,gBADV;AAEII,YAAAA,KAAK,EAAE,CAFX;AAEiB;AACbC,YAAAA,QAAQ,EAAE,CAHd;AAGiB;AACbC,YAAAA,SAAS,EAAE,CAJf;AAIkB;AACdC,YAAAA,UAAU,EAAE,CALhB,CAKkB;;AALlB,WAlBgC;AAAA,eA2BpCC,aA3BoC,GA4BhC;AACIR,YAAAA,IAAI,EAAE,eADV;AAEIS,YAAAA,IAAI,EAAE,CAFV;AAEgB;AACZC,YAAAA,IAAI,EAAE,CAHV;AAGgB;AACZC,YAAAA,KAAK,EAAE,CAJX;AAIgB;AACZL,YAAAA,SAAS,EAAE,CALf;AAKoB;AAChBC,YAAAA,UAAU,EAAE,CANhB;AAMoB;AAChBK,YAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAPZ;AAOwC;AAEpCC,YAAAA,OAAO,EAAE,CATb;AASyB;AACrBC,YAAAA,WAAW,EAAE,CAVjB;AAWIC,YAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAXhB;AAW2B;AACvBC,YAAAA,UAAU,EAAE,CAZhB;AAYyB;AACrBC,YAAAA,WAAW,EAAE,CAbjB;AAayB;AACrBC,YAAAA,WAAW,EAAE,CAdjB,CAcyB;;AAdzB,WA5BgC;AAAA;;AA8CpCC,QAAAA,KAAK,GAAG;AACJC,UAAAA,UAAU,CAACC,OAAX,GAAqB,IAArB;AACA;AAAA;AAAA,oCAASC,IAAT,CAAcC,IAAd,CAAmB,8BAAnB;AACH;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB,CArDmC,CAuDpC;;;AACAC,QAAAA,SAAS,CAAC1B,IAAD,EAAOC,IAAP,EAAa;AAClB0B,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB3B,IAAxB;AACH,SA1DmC,CA4DpC;;;AACA4B,QAAAA,UAAU,CAAC7B,IAAD,EAAYC,IAAZ,EAAuB;AAC7B,cAAI6B,GAAG,GAAG;AACN9B,YAAAA,IAAI,EAAEA,IADA;AAENC,YAAAA,IAAI,EAAEA;AAFA,WAAV;AAIA;AAAA;AAAA,4BAAK8B,WAAL,GAAmBC,IAAnB,CAAwBC,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAAxB;AACH;;AAnEmC,O","sourcesContent":["import { _decorator, Component, Node, SpriteFrame, Sprite, resources, Prefab, instantiate } from 'cc';\r\nimport HTTP from '../utils/HTTP';\r\nimport { AudioMgr } from '../utils/audioMgr';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('game_sgj')\r\nexport class game_sgj extends Component {\r\n\r\n    //客户端消息----下注\r\n    cmd_c_bet =\r\n        {\r\n            type: 'cmd_c_bet',\r\n            data: [0, 0, 0, 0, 0, 0, 0, 0],\r\n        }\r\n\r\n    //客户端消息----猜大小,//猜大小，0为小（0-7），1为大（8-15）\r\n    cmd_c_bigSmall =\r\n        {\r\n            type: 'cmd_c_bigSmall',\r\n            data: 0, //赌注\r\n        }\r\n\r\n    //服务端消息----猜大小\r\n    cmd_s_bigSmall =\r\n        {\r\n            type: 'cmd_s_bigSmall',\r\n            iswin: 0,    //猜大小成功 0失败，1成功。\r\n            bigsmall: 0, //大小的实际数值\r\n            wins_core: 0, //赢分\r\n            user_score: 0,//分数\r\n        }\r\n\r\n    //服务端消息----开奖       \r\n    cmd_s_gameEnd =\r\n        {\r\n            type: 'cmd_s_gameEnd',\r\n            step: 0,    //开奖格子\r\n            area: 0,    //开奖区域\r\n            tiems: 0,   //倍数\r\n            wins_core: 0,   //赢分\r\n            user_score: 0,  //分数\r\n            record: [0, 0, 0, 0, 0, 0, 0, 0],   //历史记录\r\n\r\n            eventid: 0,          //事件id\r\n            event_count: 0,\r\n            event_step: [0, 1],    //开奖格子,数组[24]\r\n            event_area: 0,       //开奖区域,数组[24]\r\n            event_times: 0,      //倍数,数组[24]\r\n            event_score: 0,      //当前赢分,数组[24]\r\n        }\r\n\r\n    \r\n    start() {\r\n        globalThis.curgame = this;\r\n        AudioMgr.inst.play('../../image/sgj/sound/C1.mp3')\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n\r\n    //接受消息\r\n    onMessage(type, data) {\r\n        console.log('收到服务器消息：', data);\r\n    }\r\n\r\n    //发送消息\r\n    sendMssage(type: any, data: any) {\r\n        let msg = {\r\n            type: type,\r\n            data: data,\r\n        }\r\n        HTTP.getInstance().send(JSON.stringify(msg));\r\n    }\r\n}"]}
{"version":3,"sources":["file:///Users/zzx/Desktop/naga123/client/assets/script/sgj/game_sgj.ts"],"names":["_decorator","Component","HTTP","ccclass","property","game_sgj","betScore","betData_C","type","data","bigSmall_C","bigSmall_S","iswin","bigsmall","winscore","userscore","gameEnd_S","step","area","tiems","record","eventid","start","console","log","globalThis","curgame","update","deltaTime","onMessage","sendMssage","msg","getInstance","send","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AACdC,MAAAA,I;;;;;;;;;OACD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;0BAGjBK,Q,WADZF,OAAO,CAAC,UAAD,C,gBAAR,MACaE,QADb,SAC8BJ,SAD9B,CACwC;AAAA;AAAA;AAAA,eAOpCK,QAPoC,GAOf,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAPe;AAAA,eAUpCC,SAVoC,GAWhC;AACIC,YAAAA,IAAI,EAAE,uBADV;AAEIC,YAAAA,IAAI,EAAE,KAAKH;AAFf,WAXgC;AAAA,eAiBpCI,UAjBoC,GAkBhC;AACIF,YAAAA,IAAI,EAAE,oBADV;AAEIC,YAAAA,IAAI,EAAE,CAFV,CAEa;;AAFb,WAlBgC;AAAA,eAwBpCE,UAxBoC,GAyBhC;AACIH,YAAAA,IAAI,EAAE,oBADV;AAEII,YAAAA,KAAK,EAAE,CAFX;AAEiB;AACbC,YAAAA,QAAQ,EAAE,CAHd;AAGiB;AACbC,YAAAA,QAAQ,EAAE,CAJd;AAIiB;AACbC,YAAAA,SAAS,EAAE,CALf,CAKiB;;AALjB,WAzBgC;AAAA,eAkCpCC,SAlCoC,GAmChC;AACIR,YAAAA,IAAI,EAAE,mBADV;AAEIS,YAAAA,IAAI,EAAC,CAFT;AAGIC,YAAAA,IAAI,EAAC,CAHT;AAIIC,YAAAA,KAAK,EAAC,CAJV;AAKIL,YAAAA,QAAQ,EAAC,CALb;AAMIC,YAAAA,SAAS,EAAC,CANd;AAOIK,YAAAA,MAAM,EAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,CAPX;AASIC,YAAAA,OAAO,EAAC;AATZ,WAnCgC;AAAA;;AA+ChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEJC,QAAAA,KAAK,GAAG;AACJC,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKjB,SAA7B;AACAkB,UAAAA,UAAU,CAACC,OAAX,GAAqB,IAArB;AACH;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB,CAhEmC,CAkEpC;;;AACAC,QAAAA,SAAS,CAACrB,IAAD,EAAOC,IAAP,EAAa;AAClBc,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBf,IAAxB;AACH,SArEmC,CAuEpC;;;AACAqB,QAAAA,UAAU,CAACtB,IAAD,EAAYC,IAAZ,EAAuB;AAC7B,cAAIsB,GAAG,GAAG;AACNvB,YAAAA,IAAI,EAAEA,IADA;AAENC,YAAAA,IAAI,EAAEA;AAFA,WAAV;AAIA;AAAA;AAAA,4BAAKuB,WAAL,GAAmBC,IAAnB,CAAwBC,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAAxB;AACH;;AA9EmC,O","sourcesContent":["import { _decorator, Component, Node, SpriteFrame, Sprite, resources, Prefab, instantiate } from 'cc';\nimport HTTP from '../utils/HTTP';\nconst { ccclass, property } = _decorator;\n\n@ccclass('game_sgj')\nexport class game_sgj extends Component {\n\n    //     //用户下注\n    // typedef struct \n    // {\n    //     LONGLONG\t\tlJettonScore[8];\t\t\t\t\t\t//加注数目\n    // }CMD_C_SGJ_PlaceJetton;\n    betScore: number[] = [0, 0, 0, 0, 0, 0, 0, 0]\n\n    //客户端消息----下注\n    betData_C =\n        {\n            type: 'CMD_C_SGJ_PlaceJetton',\n            data: this.betScore,\n        }\n\n    //客户端消息----猜大小,//猜大小，0为小（0-7），1为大（8-15）\n    bigSmall_C =\n        {\n            type: 'CMD_C_SGJ_BigSmall',\n            data: 0, //赌注\n        }\n\n    //服务端消息----猜大小\n    bigSmall_S =\n        {\n            type: 'CMD_S_SGJ_BigSmall',\n            iswin: 0,    //猜大小成功 0失败，1成功。\n            bigsmall: 0, //大小的实际数值\n            winscore: 0, //玩家成绩\n            userscore: 0,//玩家积分\n        }\n\n    //服务端消息----开奖       \n    gameEnd_S =\n        {\n            type: 'CMD_S_SGJ_GameEnd',\n            step:0,\n            area:0,\n            tiems:0,\n            winscore:0,\n            userscore:0,\n            record:[0,0,0,0,0,0,0,0],\n\n            eventid:0,\n            \n        }\n        // typedef struct \n        // {\n        //     WORD\t\t\twEventId;\t\t\t\t\t\t\t//时间id\n        //     BYTE\t\t\tcbCount;\t\t\t\t\t\t\t//开奖区域数量\n        //     BYTE\t\t\tcbStep[24];\t\t\t//开奖格子\n        //     BYTE\t\t\tcbArea[24];\t\t\t//开奖区域\n        //     WORD\t\t\twTimes[24];\t\t\t//倍数\n        //     LONGLONG        lScore[24];\t\t\t//倍数\n        // }SGJ_tagEventData;\n\n    start() {\n        console.log('betScore', this.betData_C);\n        globalThis.curgame = this;\n    }\n\n    update(deltaTime: number) {\n\n    }\n\n    //接受消息\n    onMessage(type, data) {\n        console.log('收到服务器消息：', data);\n    }\n\n    //发送消息\n    sendMssage(type: any, data: any) {\n        let msg = {\n            type: type,\n            data: data,\n        }\n        HTTP.getInstance().send(JSON.stringify(msg));\n    }\n}"]}
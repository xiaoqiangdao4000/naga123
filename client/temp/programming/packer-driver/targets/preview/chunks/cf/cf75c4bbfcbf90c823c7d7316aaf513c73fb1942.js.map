{"version":3,"sources":["file:///C:/Users/zzx/Desktop/naga123/client/assets/script/sgj/sgj_normal.ts"],"names":["_decorator","Component","ccclass","property","sgj_normal","curIndex","start","globalThis","play","schedule","updateMask","stop","resetMask","unschedule","i","sgj_view","mask_node","active","light_node","update","deltaTime"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;;;;;;;;OACf;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U,GAE9B;;4BAEaI,U,WADZF,OAAO,CAAC,YAAD,C,gBAAR,MACaE,UADb,SACgCH,SADhC,CAC0C;AAAA;AAAA;AAAA,eAEtCI,QAFsC,GAE3B,CAF2B;AAAA;;AAItCC,QAAAA,KAAK,GAAG;AACJC,UAAAA,UAAU,CAACH,UAAX,GAAwB,IAAxB;AACH;;AAEDI,QAAAA,IAAI,GAAG;AACH,eAAKC,QAAL,CAAc,KAAKC,UAAnB,EAA+B,GAA/B;AACH;;AAEDC,QAAAA,IAAI,GAAG;AACH,eAAKC,SAAL;AACA,eAAKC,UAAL,CAAgB,KAAKH,UAArB;AACH;;AAEDE,QAAAA,SAAS,GAAG;AACR,eAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBP,YAAAA,UAAU,CAACQ,QAAX,CAAoBC,SAApB,CAA8BF,CAA9B,EAAiCG,MAAjC,GAA0C,KAA1C;AACAV,YAAAA,UAAU,CAACQ,QAAX,CAAoBG,UAApB,CAA+BJ,CAA/B,EAAkCG,MAAlC,GAA2C,KAA3C;AACH;AACJ;;AAEDP,QAAAA,UAAU,GAAG;AACT,cAAI,KAAKL,QAAL,GAAgB,CAApB,EAAuB,KAAKA,QAAL,GAAvB,KACK,KAAKA,QAAL,GAAgB,CAAhB;;AACL,eAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB,gBAAIA,CAAC,GAAG,CAAJ,IAAS,KAAKT,QAAlB,EAA4B;AACxBE,cAAAA,UAAU,CAACQ,QAAX,CAAoBC,SAApB,CAA8BF,CAA9B,EAAiCG,MAAjC,GAA0C,IAA1C;AACAV,cAAAA,UAAU,CAACQ,QAAX,CAAoBG,UAApB,CAA+BJ,CAA/B,EAAkCG,MAAlC,GAA2C,IAA3C;AACAV,cAAAA,UAAU,CAACQ,QAAX,CAAoBC,SAApB,CAA8BF,CAAC,GAAG,CAAlC,EAAqCG,MAArC,GAA8C,IAA9C;AACAV,cAAAA,UAAU,CAACQ,QAAX,CAAoBG,UAApB,CAA+BJ,CAAC,GAAG,CAAnC,EAAsCG,MAAtC,GAA+C,IAA/C;AACH,aALD,MAMK;AACDV,cAAAA,UAAU,CAACQ,QAAX,CAAoBC,SAApB,CAA8BF,CAA9B,EAAiCG,MAAjC,GAA0C,KAA1C;AACAV,cAAAA,UAAU,CAACQ,QAAX,CAAoBG,UAApB,CAA+BJ,CAA/B,EAAkCG,MAAlC,GAA2C,KAA3C;AACH;AACJ;AACJ;;AAEDE,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AA3CqC,O","sourcesContent":["import { _decorator, Component, Node, random, randomRangeInt } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n//待机、随机运动\r\n@ccclass('sgj_normal')\r\nexport class sgj_normal extends Component {\r\n\r\n    curIndex = 0;\r\n\r\n    start() {\r\n        globalThis.sgj_normal = this;\r\n    }\r\n\r\n    play() {\r\n        this.schedule(this.updateMask, 0.6);\r\n    }\r\n\r\n    stop() {\r\n        this.resetMask();\r\n        this.unschedule(this.updateMask);\r\n    }\r\n\r\n    resetMask() {\r\n        for (let i = 0; i < 24; i++) {\r\n            globalThis.sgj_view.mask_node[i].active = false;\r\n            globalThis.sgj_view.light_node[i].active = false;\r\n        }\r\n    }\r\n\r\n    updateMask() {\r\n        if (this.curIndex < 6) this.curIndex++;\r\n        else this.curIndex = 1;\r\n        for (let i = 0; i < 24; i++) {\r\n            if (i % 7 == this.curIndex) {\r\n                globalThis.sgj_view.mask_node[i].active = true;\r\n                globalThis.sgj_view.light_node[i].active = true;\r\n                globalThis.sgj_view.mask_node[i - 1].active = true;\r\n                globalThis.sgj_view.light_node[i - 1].active = true;\r\n            }\r\n            else {\r\n                globalThis.sgj_view.mask_node[i].active = false;\r\n                globalThis.sgj_view.light_node[i].active = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n}\r\n"]}
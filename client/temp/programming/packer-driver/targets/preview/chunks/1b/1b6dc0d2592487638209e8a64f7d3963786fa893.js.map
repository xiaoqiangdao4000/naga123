{"version":3,"sources":["file:///C:/Users/zzx/Desktop/naga123/client/assets/script/hall/hall_message.ts"],"names":["_decorator","Component","ccclass","property","hall_message","_ws","start","connectServer","globalThis","update","deltaTime","closeWebSocket","console","log","close","ws","WebSocket","onopen","onmessage","result","msg","JSON","parse","data","type","onMessage","eventTargets","emit","userMgr","userid","nickname","password","bindaccount","saveAccount","sendMssage","send","stringify"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('hall_message')\r\nexport class hall_message extends Component {\r\n    _ws: WebSocket = null;\r\n\r\n    start() {\r\n        this.connectServer();\r\n        globalThis.hall_message = this;\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n\r\n    closeWebSocket()\r\n    {\r\n        console.log('关闭连接前：this._ws = ', this._ws);\r\n        this._ws.close();\r\n        console.log('关闭连接后：this._ws = ', this._ws);\r\n    }\r\n\r\n    connectServer() {\r\n        const ws = new WebSocket('ws://127.0.0.1:3001')\r\n        this._ws = ws;\r\n        ws.onopen = () => {\r\n            console.log('连接--大厅服务器--成功！');\r\n        }\r\n\r\n        ws.onmessage = (result) => {\r\n            let msg = JSON.parse(result.data);\r\n            let type = msg.type;\r\n            let data = msg.data;\r\n            this.onMessage(type, data);\r\n        }\r\n    }\r\n\r\n    onMessage(type, data) {\r\n        switch (type) {\r\n            case 'hall_bind_account':   //接受账号绑定消息\r\n                {\r\n                    if (data == 0) {\r\n                        globalThis.eventTargets.emit('hall_popTips', '绑定账号失败！');\r\n                        break;\r\n                    }\r\n                    console.log('bang = ', data);\r\n                    globalThis.userMgr.userid = data.userid;\r\n                    globalThis.userMgr.nickname = data.nickname;\r\n                    globalThis.userMgr.password = data.password;\r\n                    globalThis.userMgr.bindaccount = data.bindaccount;\r\n                    globalThis.userMgr.saveAccount(data.nickname, data.password);\r\n                    console.log('绑定账号成功!:' + data.userid + ' ,' + data.nickname +  ' ,' + data.password + ' ,' + data.bindaccount);\r\n                    globalThis.eventTargets.emit('hall_popTips', '绑定账号--成功--');\r\n                    \r\n                    break;\r\n                }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    sendMssage(type: any, data: any) {\r\n        let msg = {\r\n            type: type,\r\n            data: data,\r\n        }\r\n        this._ws.send(JSON.stringify(msg));\r\n    }\r\n}\r\n\r\n\r\n"]}